# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Testing.V1.Model.IosModel do
  @moduledoc """
  A description of an iOS device tests may be run on.

  ## Attributes

  - tags ([String.t]): Output only. Tags for this dimension. Examples: \&quot;default\&quot;, \&quot;preview\&quot;, \&quot;deprecated\&quot; Defaults to: `null`.
  - deviceCapabilities ([String.t]): Output only. Device capabilities. Copied from https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html Defaults to: `null`.
  - formFactor (String.t): Whether this device is a phone, tablet, wearable, etc. @OutputOnly Defaults to: `null`.
    - Enum - one of [DEVICE_FORM_FACTOR_UNSPECIFIED, PHONE, TABLET, WEARABLE]
  - id (String.t): Output only. The unique opaque id for this model. Use this for invoking the TestExecutionService. Defaults to: `null`.
  - name (String.t): Output only. The human-readable name for this device model. Examples: \&quot;iPhone 4s\&quot;, \&quot;iPad Mini 2\&quot; Defaults to: `null`.
  - supportedVersionIds ([String.t]): Output only. The set of iOS major software versions this device supports. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :tags => list(any()),
          :deviceCapabilities => list(any()),
          :formFactor => any(),
          :id => any(),
          :name => any(),
          :supportedVersionIds => list(any())
        }

  field(:tags, type: :list)
  field(:deviceCapabilities, type: :list)
  field(:formFactor)
  field(:id)
  field(:name)
  field(:supportedVersionIds, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Testing.V1.Model.IosModel do
  def decode(value, options) do
    GoogleApi.Testing.V1.Model.IosModel.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Testing.V1.Model.IosModel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
