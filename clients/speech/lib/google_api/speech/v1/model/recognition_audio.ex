# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Speech.V1.Model.RecognitionAudio do
  @moduledoc """
  Contains audio data in the encoding specified in the &#x60;RecognitionConfig&#x60;. Either &#x60;content&#x60; or &#x60;uri&#x60; must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. See [content limits](/speech-to-text/quotas#content).

  ## Attributes

  - content (binary()): The audio data bytes encoded as specified in &#x60;RecognitionConfig&#x60;. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Defaults to: `null`.
  - uri (String.t): URI that points to a file that contains audio data bytes as specified in &#x60;RecognitionConfig&#x60;. The file must not be compressed (for example, gzip). Currently, only Google Cloud Storage URIs are supported, which must be specified in the following format: &#x60;gs://bucket_name/object_name&#x60; (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/reference-uris). Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :content => any(),
          :uri => any()
        }

  field(:content)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.Speech.V1.Model.RecognitionAudio do
  def decode(value, options) do
    GoogleApi.Speech.V1.Model.RecognitionAudio.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Speech.V1.Model.RecognitionAudio do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
