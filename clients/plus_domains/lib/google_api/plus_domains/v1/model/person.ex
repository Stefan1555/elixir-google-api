# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.PlusDomains.V1.Model.Person do
  @moduledoc """


  ## Attributes

  - aboutMe (String.t): A short biography for this person. Defaults to: `null`.
  - birthday (String.t): The person&#39;s date of birth, represented as YYYY-MM-DD. Defaults to: `null`.
  - braggingRights (String.t): The \&quot;bragging rights\&quot; line of this person. Defaults to: `null`.
  - circledByCount (integer()): For followers who are visible, the number of people who have added this person or page to a circle. Defaults to: `null`.
  - cover (PersonCover):  Defaults to: `null`.
  - currentLocation (String.t): (this field is not currently used) Defaults to: `null`.
  - displayName (String.t): The name of this person, which is suitable for display. Defaults to: `null`.
  - domain (String.t): The hosted domain name for the user&#39;s Google Apps account. For instance, example.com. The plus.profile.emails.read or email scope is needed to get this domain name. Defaults to: `null`.
  - emails ([PersonEmails]): A list of email addresses that this person has, including their Google account email address, and the public verified email addresses on their Google+ profile. The plus.profile.emails.read scope is needed to retrieve these email addresses, or the email scope can be used to retrieve just the Google account email address. Defaults to: `null`.
  - etag (String.t): ETag of this response for caching purposes. Defaults to: `null`.
  - gender (String.t): The person&#39;s gender. Possible values include, but are not limited to, the following values:   - \&quot;male\&quot; - Male gender.  - \&quot;female\&quot; - Female gender.  - \&quot;other\&quot; - Other. Defaults to: `null`.
  - id (String.t): The ID of this person. Defaults to: `null`.
  - image (PersonImage):  Defaults to: `null`.
  - isPlusUser (boolean()): Whether this user has signed up for Google+. Defaults to: `null`.
  - kind (String.t): Identifies this resource as a person. Value: \&quot;plus#person\&quot;. Defaults to: `null`.
  - name (PersonName):  Defaults to: `null`.
  - nickname (String.t): The nickname of this person. Defaults to: `null`.
  - objectType (String.t): Type of person within Google+. Possible values include, but are not limited to, the following values:   - \&quot;person\&quot; - represents an actual person.  - \&quot;page\&quot; - represents a page. Defaults to: `null`.
  - occupation (String.t): The occupation of this person. Defaults to: `null`.
  - organizations ([PersonOrganizations]): A list of current or past organizations with which this person is associated. Defaults to: `null`.
  - placesLived ([PersonPlacesLived]): A list of places where this person has lived. Defaults to: `null`.
  - plusOneCount (integer()): If a Google+ Page, the number of people who have +1&#39;d this page. Defaults to: `null`.
  - relationshipStatus (String.t): The person&#39;s relationship status. Possible values include, but are not limited to, the following values:   - \&quot;single\&quot; - Person is single.  - \&quot;in_a_relationship\&quot; - Person is in a relationship.  - \&quot;engaged\&quot; - Person is engaged.  - \&quot;married\&quot; - Person is married.  - \&quot;its_complicated\&quot; - The relationship is complicated.  - \&quot;open_relationship\&quot; - Person is in an open relationship.  - \&quot;widowed\&quot; - Person is widowed.  - \&quot;in_domestic_partnership\&quot; - Person is in a domestic partnership.  - \&quot;in_civil_union\&quot; - Person is in a civil union. Defaults to: `null`.
  - skills (String.t): The person&#39;s skills. Defaults to: `null`.
  - tagline (String.t): The brief description (tagline) of this person. Defaults to: `null`.
  - url (String.t): The URL of this person&#39;s profile. Defaults to: `null`.
  - urls ([PersonUrls]): A list of URLs for this person. Defaults to: `null`.
  - verified (boolean()): Whether the person or Google+ Page has been verified. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aboutMe => any(),
          :birthday => any(),
          :braggingRights => any(),
          :circledByCount => any(),
          :cover => GoogleApi.PlusDomains.V1.Model.PersonCover.t(),
          :currentLocation => any(),
          :displayName => any(),
          :domain => any(),
          :emails => list(GoogleApi.PlusDomains.V1.Model.PersonEmails.t()),
          :etag => any(),
          :gender => any(),
          :id => any(),
          :image => GoogleApi.PlusDomains.V1.Model.PersonImage.t(),
          :isPlusUser => any(),
          :kind => any(),
          :name => GoogleApi.PlusDomains.V1.Model.PersonName.t(),
          :nickname => any(),
          :objectType => any(),
          :occupation => any(),
          :organizations => list(GoogleApi.PlusDomains.V1.Model.PersonOrganizations.t()),
          :placesLived => list(GoogleApi.PlusDomains.V1.Model.PersonPlacesLived.t()),
          :plusOneCount => any(),
          :relationshipStatus => any(),
          :skills => any(),
          :tagline => any(),
          :url => any(),
          :urls => list(GoogleApi.PlusDomains.V1.Model.PersonUrls.t()),
          :verified => any()
        }

  field(:aboutMe)
  field(:birthday)
  field(:braggingRights)
  field(:circledByCount)
  field(:cover, as: GoogleApi.PlusDomains.V1.Model.PersonCover)
  field(:currentLocation)
  field(:displayName)
  field(:domain)
  field(:emails, as: GoogleApi.PlusDomains.V1.Model.PersonEmails, type: :list)
  field(:etag)
  field(:gender)
  field(:id)
  field(:image, as: GoogleApi.PlusDomains.V1.Model.PersonImage)
  field(:isPlusUser)
  field(:kind)
  field(:name, as: GoogleApi.PlusDomains.V1.Model.PersonName)
  field(:nickname)
  field(:objectType)
  field(:occupation)
  field(:organizations, as: GoogleApi.PlusDomains.V1.Model.PersonOrganizations, type: :list)
  field(:placesLived, as: GoogleApi.PlusDomains.V1.Model.PersonPlacesLived, type: :list)
  field(:plusOneCount)
  field(:relationshipStatus)
  field(:skills)
  field(:tagline)
  field(:url)
  field(:urls, as: GoogleApi.PlusDomains.V1.Model.PersonUrls, type: :list)
  field(:verified)
end

defimpl Poison.Decoder, for: GoogleApi.PlusDomains.V1.Model.Person do
  def decode(value, options) do
    GoogleApi.PlusDomains.V1.Model.Person.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PlusDomains.V1.Model.Person do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
