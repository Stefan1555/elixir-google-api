# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Dataflow.V1b3.Model.StreamingComputationTask do
  @moduledoc """
  A task which describes what action should be performed for the specified streaming computation ranges.

  ## Attributes

  - computationRanges ([StreamingComputationRanges]): Contains ranges of a streaming computation this task should apply to. Defaults to: `null`.
  - dataDisks ([MountedDataDisk]): Describes the set of data disks this task should apply to. Defaults to: `null`.
  - taskType (String.t): A type of streaming computation task. Defaults to: `null`.
    - Enum - one of [STREAMING_COMPUTATION_TASK_UNKNOWN, STREAMING_COMPUTATION_TASK_STOP, STREAMING_COMPUTATION_TASK_START]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :computationRanges =>
            list(GoogleApi.Dataflow.V1b3.Model.StreamingComputationRanges.t()),
          :dataDisks => list(GoogleApi.Dataflow.V1b3.Model.MountedDataDisk.t()),
          :taskType => any()
        }

  field(
    :computationRanges,
    as: GoogleApi.Dataflow.V1b3.Model.StreamingComputationRanges,
    type: :list
  )

  field(:dataDisks, as: GoogleApi.Dataflow.V1b3.Model.MountedDataDisk, type: :list)
  field(:taskType)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.StreamingComputationTask do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.StreamingComputationTask.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.StreamingComputationTask do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
