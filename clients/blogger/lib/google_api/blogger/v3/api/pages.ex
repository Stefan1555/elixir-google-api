# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Blogger.V3.Api.Pages do
  @moduledoc """
  API calls for all endpoints tagged `Pages`.
  """

  alias GoogleApi.Blogger.V3.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Delete a page by ID.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): The ID of the Blog.
  - page_id (String.t): The ID of the Page.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_delete(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def blogger_pages_delete(connection, blog_id, page_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url("/blogs/{blogId}/pages/{pageId}", %{
        "blogId" => URI.encode_www_form(blog_id),
        "pageId" => URI.encode_www_form(page_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Gets one blog page by ID.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): ID of the blog containing the page.
  - page_id (String.t): The ID of the page to get.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :view (String.t): 

  ## Returns

  {:ok, %GoogleApi.Blogger.V3.Model.Page{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_get(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Blogger.V3.Model.Page.t()} | {:error, Tesla.Env.t()}
  def blogger_pages_get(connection, blog_id, page_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :view => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/blogs/{blogId}/pages/{pageId}", %{
        "blogId" => URI.encode_www_form(blog_id),
        "pageId" => URI.encode_www_form(page_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Blogger.V3.Model.Page{}])
  end

  @doc """
  Add a page.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): ID of the blog to add the page to.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :isDraft (boolean()): Whether to create the page as a draft (default: false).
    - :body (Page): 

  ## Returns

  {:ok, %GoogleApi.Blogger.V3.Model.Page{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_insert(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Blogger.V3.Model.Page.t()} | {:error, Tesla.Env.t()}
  def blogger_pages_insert(connection, blog_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :isDraft => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/blogs/{blogId}/pages", %{
        "blogId" => URI.encode_www_form(blog_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Blogger.V3.Model.Page{}])
  end

  @doc """
  Retrieves the pages for a blog, optionally including non-LIVE statuses.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): ID of the blog to fetch Pages from.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :fetchBodies (boolean()): Whether to retrieve the Page bodies.
    - :maxResults (integer()): Maximum number of Pages to fetch.
    - :pageToken (String.t): Continuation token if the request is paged.
    - :status ([String.t]): 
    - :view (String.t): Access level with which to view the returned result. Note that some fields require elevated access.

  ## Returns

  {:ok, %GoogleApi.Blogger.V3.Model.PageList{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Blogger.V3.Model.PageList.t()} | {:error, Tesla.Env.t()}
  def blogger_pages_list(connection, blog_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :fetchBodies => :query,
      :maxResults => :query,
      :pageToken => :query,
      :status => :query,
      :view => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/blogs/{blogId}/pages", %{
        "blogId" => URI.encode_www_form(blog_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Blogger.V3.Model.PageList{}])
  end

  @doc """
  Update a page. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): The ID of the Blog.
  - page_id (String.t): The ID of the Page.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :publish (boolean()): Whether a publish action should be performed when the page is updated (default: false).
    - :revert (boolean()): Whether a revert action should be performed when the page is updated (default: false).
    - :body (Page): 

  ## Returns

  {:ok, %GoogleApi.Blogger.V3.Model.Page{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_patch(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Blogger.V3.Model.Page.t()} | {:error, Tesla.Env.t()}
  def blogger_pages_patch(connection, blog_id, page_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :publish => :query,
      :revert => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url("/blogs/{blogId}/pages/{pageId}", %{
        "blogId" => URI.encode_www_form(blog_id),
        "pageId" => URI.encode_www_form(page_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Blogger.V3.Model.Page{}])
  end

  @doc """
  Publishes a draft page.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): The ID of the blog.
  - page_id (String.t): The ID of the page.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.Blogger.V3.Model.Page{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_publish(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Blogger.V3.Model.Page.t()} | {:error, Tesla.Env.t()}
  def blogger_pages_publish(connection, blog_id, page_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/blogs/{blogId}/pages/{pageId}/publish", %{
        "blogId" => URI.encode_www_form(blog_id),
        "pageId" => URI.encode_www_form(page_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Blogger.V3.Model.Page{}])
  end

  @doc """
  Revert a published or scheduled page to draft state.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): The ID of the blog.
  - page_id (String.t): The ID of the page.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.Blogger.V3.Model.Page{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_revert(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Blogger.V3.Model.Page.t()} | {:error, Tesla.Env.t()}
  def blogger_pages_revert(connection, blog_id, page_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/blogs/{blogId}/pages/{pageId}/revert", %{
        "blogId" => URI.encode_www_form(blog_id),
        "pageId" => URI.encode_www_form(page_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Blogger.V3.Model.Page{}])
  end

  @doc """
  Update a page.

  ## Parameters

  - connection (GoogleApi.Blogger.V3.Connection): Connection to server
  - blog_id (String.t): The ID of the Blog.
  - page_id (String.t): The ID of the Page.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :publish (boolean()): Whether a publish action should be performed when the page is updated (default: false).
    - :revert (boolean()): Whether a revert action should be performed when the page is updated (default: false).
    - :body (Page): 

  ## Returns

  {:ok, %GoogleApi.Blogger.V3.Model.Page{}} on success
  {:error, info} on failure
  """
  @spec blogger_pages_update(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Blogger.V3.Model.Page.t()} | {:error, Tesla.Env.t()}
  def blogger_pages_update(connection, blog_id, page_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :publish => :query,
      :revert => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:put)
      |> Request.url("/blogs/{blogId}/pages/{pageId}", %{
        "blogId" => URI.encode_www_form(blog_id),
        "pageId" => URI.encode_www_form(page_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Blogger.V3.Model.Page{}])
  end
end
