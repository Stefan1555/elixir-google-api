# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Content.V2.Model.AccountStatus do
  @moduledoc """
  The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.

  ## Attributes

  - accountId (String.t): The ID of the account for which the status is reported. Defaults to: `null`.
  - accountLevelIssues ([AccountStatusAccountLevelIssue]): A list of account level issues. Defaults to: `null`.
  - dataQualityIssues ([AccountStatusDataQualityIssue]): A list of data quality issues. Defaults to: `null`.
  - kind (String.t): Identifies what kind of resource this is. Value: the fixed string \&quot;content#accountStatus\&quot;. Defaults to: `null`.
  - products ([AccountStatusProducts]): List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes. Defaults to: `null`.
  - websiteClaimed (boolean()): Whether the account&#39;s website is claimed or not. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accountId => any(),
          :accountLevelIssues =>
            list(GoogleApi.Content.V2.Model.AccountStatusAccountLevelIssue.t()),
          :dataQualityIssues =>
            list(GoogleApi.Content.V2.Model.AccountStatusDataQualityIssue.t()),
          :kind => any(),
          :products => list(GoogleApi.Content.V2.Model.AccountStatusProducts.t()),
          :websiteClaimed => any()
        }

  field(:accountId)

  field(
    :accountLevelIssues,
    as: GoogleApi.Content.V2.Model.AccountStatusAccountLevelIssue,
    type: :list
  )

  field(
    :dataQualityIssues,
    as: GoogleApi.Content.V2.Model.AccountStatusDataQualityIssue,
    type: :list
  )

  field(:kind)
  field(:products, as: GoogleApi.Content.V2.Model.AccountStatusProducts, type: :list)
  field(:websiteClaimed)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V2.Model.AccountStatus do
  def decode(value, options) do
    GoogleApi.Content.V2.Model.AccountStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V2.Model.AccountStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
