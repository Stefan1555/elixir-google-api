# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdExchangeBuyer.V2beta1.Api.Bidders do
  @moduledoc """
  API calls for all endpoints tagged `Bidders`.
  """

  alias GoogleApi.AdExchangeBuyer.V2beta1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Deletes a single creative.  A creative is deactivated upon deletion and does not count against active snippet quota. A deleted creative should not be used in bidding (all bids with that creative will be rejected).

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;ownerName&#x60;. Name of the owner (bidder or account) of the creative to be deleted. For example:  - For an account-level creative for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123&#x60;  - For an account-level creative for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456&#x60;
  - accounts_id (String.t): Part of &#x60;ownerName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - creative_id (String.t): The ID of the creative to delete.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_creatives_delete(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_creatives_delete(
        connection,
        bidders_id,
        accounts_id,
        creative_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/creatives/{creativeId}",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "creativeId" => URI.encode_www_form(creative_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}])
  end

  @doc """
  Lists all metrics that are measured in terms of number of bids.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_bid_metrics_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_bid_metrics_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidMetrics",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse{}]
    )
  end

  @doc """
  List all errors that occurred in bid responses, with the number of bid responses affected for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_bid_response_errors_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_bid_response_errors_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponseErrors",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse{}]
    )
  end

  @doc """
  List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_bid_responses_without_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_bid_responses_without_bids_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponsesWithoutBids",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse{}]
    )
  end

  @doc """
  Creates the specified filter set for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;ownerName&#x60;. Name of the owner (bidder or account) of the filter set to be created. For example:  - For a bidder-level filter set for bidder 123: &#x60;bidders/123&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456&#x60;
  - accounts_id (String.t): Part of &#x60;ownerName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :isTransient (boolean()): Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation.
    - :body (FilterSet): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_create(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_create(
        connection,
        bidders_id,
        accounts_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :isTransient => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets", %{
        "biddersId" => URI.encode_www_form(bidders_id),
        "accountsId" => URI.encode_www_form(accounts_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}])
  end

  @doc """
  Deletes the requested filter set from the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;name&#x60;. Full name of the resource to delete. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_delete(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_delete(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}])
  end

  @doc """
  List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_filtered_bid_requests_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_filtered_bid_requests_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBidRequests",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse{}]
    )
  end

  @doc """
  List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - creative_status_id (integer()): The ID of the creative status for which to retrieve a breakdown by creative. See [creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_filtered_bids_creatives_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          integer(),
          keyword()
        ) ::
          {:ok,
           GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_filtered_bids_creatives_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        creative_status_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id),
          "creativeStatusId" => creative_status_id
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [
          struct:
            %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse{}
        ]
    )
  end

  @doc """
  List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - creative_status_id (integer()): The ID of the creative status for which to retrieve a breakdown by detail. See [creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes). Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_filtered_bids_details_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          integer(),
          keyword()
        ) ::
          {:ok,
           GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_filtered_bids_details_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        creative_status_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id),
          "creativeStatusId" => creative_status_id
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [
          struct:
            %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse{}
        ]
    )
  end

  @doc """
  List all reasons for which bids were filtered, with the number of bids filtered for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_filtered_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_filtered_bids_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse{}]
    )
  end

  @doc """
  Retrieves the requested filter set for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;name&#x60;. Full name of the resource being requested. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_get(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}])
  end

  @doc """
  Lists all metrics that are measured in terms of number of impressions.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_impression_metrics_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_impression_metrics_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/impressionMetrics",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse{}]
    )
  end

  @doc """
  Lists all filter sets for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;ownerName&#x60;. Name of the owner (bidder or account) of the filter sets to be listed. For example:  - For a bidder-level filter set for bidder 123: &#x60;bidders/123&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456&#x60;
  - accounts_id (String.t): Part of &#x60;ownerName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_list(
        connection,
        bidders_id,
        accounts_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets", %{
        "biddersId" => URI.encode_www_form(bidders_id),
        "accountsId" => URI.encode_www_form(accounts_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse{}]
    )
  end

  @doc """
  List all reasons for which bids lost in the auction, with the number of bids that lost for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_losing_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_losing_bids_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/losingBids",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse{}]
    )
  end

  @doc """
  List all reasons for which winning bids were not billable, with the number of bids not billed for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - accounts_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_accounts_filter_sets_non_billable_winning_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_accounts_filter_sets_non_billable_winning_bids_list(
        connection,
        bidders_id,
        accounts_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/nonBillableWinningBids",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "accountsId" => URI.encode_www_form(accounts_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse{}]
    )
  end

  @doc """
  Lists all metrics that are measured in terms of number of bids.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the bidMetrics.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_bid_metrics_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_bid_metrics_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidMetrics", %{
        "biddersId" => URI.encode_www_form(bidders_id),
        "filterSetsId" => URI.encode_www_form(filter_sets_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse{}]
    )
  end

  @doc """
  List all errors that occurred in bid responses, with the number of bid responses affected for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the bidResponseErrors.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_bid_response_errors_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_bid_response_errors_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponseErrors",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse{}]
    )
  end

  @doc """
  List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the bidResponsesWithoutBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_bid_responses_without_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_bid_responses_without_bids_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponsesWithoutBids",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse{}]
    )
  end

  @doc """
  Creates the specified filter set for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;ownerName&#x60;. Name of the owner (bidder or account) of the filter set to be created. For example:  - For a bidder-level filter set for bidder 123: &#x60;bidders/123&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456&#x60;
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :isTransient (boolean()): Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation.
    - :body (FilterSet): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_create(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_create(
        connection,
        bidders_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :isTransient => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v2beta1/bidders/{biddersId}/filterSets", %{
        "biddersId" => URI.encode_www_form(bidders_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}])
  end

  @doc """
  Deletes the requested filter set from the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;name&#x60;. Full name of the resource to delete. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_delete(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_delete(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url("/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}", %{
        "biddersId" => URI.encode_www_form(bidders_id),
        "filterSetsId" => URI.encode_www_form(filter_sets_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}])
  end

  @doc """
  List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the filteredBidRequests.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_filtered_bid_requests_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_filtered_bid_requests_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBidRequests",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse{}]
    )
  end

  @doc """
  List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - creative_status_id (integer()): The ID of the creative status for which to retrieve a breakdown by creative. See [creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the filteredBids.creatives.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_filtered_bids_creatives_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          integer(),
          keyword()
        ) ::
          {:ok,
           GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_filtered_bids_creatives_list(
        connection,
        bidders_id,
        filter_sets_id,
        creative_status_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id),
          "creativeStatusId" => creative_status_id
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [
          struct:
            %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse{}
        ]
    )
  end

  @doc """
  List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - creative_status_id (integer()): The ID of the creative status for which to retrieve a breakdown by detail. See [creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes). Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the filteredBids.details.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_filtered_bids_details_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          integer(),
          keyword()
        ) ::
          {:ok,
           GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_filtered_bids_details_list(
        connection,
        bidders_id,
        filter_sets_id,
        creative_status_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id),
          "creativeStatusId" => creative_status_id
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [
          struct:
            %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse{}
        ]
    )
  end

  @doc """
  List all reasons for which bids were filtered, with the number of bids filtered for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the filteredBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_filtered_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_filtered_bids_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids", %{
        "biddersId" => URI.encode_www_form(bidders_id),
        "filterSetsId" => URI.encode_www_form(filter_sets_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse{}]
    )
  end

  @doc """
  Retrieves the requested filter set for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;name&#x60;. Full name of the resource being requested. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_get(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}", %{
        "biddersId" => URI.encode_www_form(bidders_id),
        "filterSetsId" => URI.encode_www_form(filter_sets_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}])
  end

  @doc """
  Lists all metrics that are measured in terms of number of impressions.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the impressionMetrics.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_impression_metrics_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_impression_metrics_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/impressionMetrics",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse{}]
    )
  end

  @doc """
  Lists all filter sets for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;ownerName&#x60;. Name of the owner (bidder or account) of the filter sets to be listed. For example:  - For a bidder-level filter set for bidder 123: &#x60;bidders/123&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456&#x60;
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_list(
        connection,
        bidders_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v2beta1/bidders/{biddersId}/filterSets", %{
        "biddersId" => URI.encode_www_form(bidders_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse{}]
    )
  end

  @doc """
  List all reasons for which bids lost in the auction, with the number of bids that lost for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the losingBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_losing_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_losing_bids_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/losingBids", %{
        "biddersId" => URI.encode_www_form(bidders_id),
        "filterSetsId" => URI.encode_www_form(filter_sets_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse{}]
    )
  end

  @doc """
  List all reasons for which winning bids were not billable, with the number of bids not billed for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - bidders_id (String.t): Part of &#x60;filterSetName&#x60;. Name of the filter set that should be applied to the requested metrics. For example:  - For a bidder-level filter set for bidder 123:   &#x60;bidders/123/filterSets/abc&#x60;  - For an account-level filter set for the buyer account representing bidder   123: &#x60;bidders/123/accounts/123/filterSets/abc&#x60;  - For an account-level filter set for the child seat buyer account 456   whose bidder is 123: &#x60;bidders/123/accounts/456/filterSets/abc&#x60;
  - filter_sets_id (String.t): Part of &#x60;filterSetName&#x60;. See documentation of &#x60;biddersId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the nonBillableWinningBids.list method.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_bidders_filter_sets_non_billable_winning_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_bidders_filter_sets_non_billable_winning_bids_list(
        connection,
        bidders_id,
        filter_sets_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/nonBillableWinningBids",
        %{
          "biddersId" => URI.encode_www_form(bidders_id),
          "filterSetsId" => URI.encode_www_form(filter_sets_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [struct: %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse{}]
    )
  end
end
