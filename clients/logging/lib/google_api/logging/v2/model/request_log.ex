# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Logging.V2.Model.RequestLog do
  @moduledoc """
  Complete log information about a single HTTP request to an App Engine application.

  ## Attributes

  - host (String.t): Internet host and port number of the resource being requested. Defaults to: `null`.
  - appEngineRelease (String.t): App Engine release version. Defaults to: `null`.
  - appId (String.t): Application that handled this request. Defaults to: `null`.
  - cost (float()): An indication of the relative cost of serving this request. Defaults to: `null`.
  - endTime (DateTime.t): Time when the request finished. Defaults to: `null`.
  - finished (boolean()): Whether this request is finished or active. Defaults to: `null`.
  - first (boolean()): Whether this is the first RequestLog entry for this request. If an active request has several RequestLog entries written to Stackdriver Logging, then this field will be set for one of them. Defaults to: `null`.
  - httpVersion (String.t): HTTP version of request. Example: \&quot;HTTP/1.1\&quot;. Defaults to: `null`.
  - instanceId (String.t): An identifier for the instance that handled the request. Defaults to: `null`.
  - instanceIndex (integer()): If the instance processing this request belongs to a manually scaled module, then this is the 0-based index of the instance. Otherwise, this value is -1. Defaults to: `null`.
  - ip (String.t): Origin IP address. Defaults to: `null`.
  - latency (String.t): Latency of the request. Defaults to: `null`.
  - line ([LogLine]): A list of log lines emitted by the application while serving this request. Defaults to: `null`.
  - megaCycles (String.t): Number of CPU megacycles used to process request. Defaults to: `null`.
  - method (String.t): Request method. Example: \&quot;GET\&quot;, \&quot;HEAD\&quot;, \&quot;PUT\&quot;, \&quot;POST\&quot;, \&quot;DELETE\&quot;. Defaults to: `null`.
  - moduleId (String.t): Module of the application that handled this request. Defaults to: `null`.
  - nickname (String.t): The logged-in user who made the request.Most likely, this is the part of the user&#39;s email before the @ sign. The field value is the same for different requests from the same user, but different users can have similar names. This information is also available to the application via the App Engine Users API.This field will be populated starting with App Engine 1.9.21. Defaults to: `null`.
  - pendingTime (String.t): Time this request spent in the pending request queue. Defaults to: `null`.
  - referrer (String.t): Referrer URL of request. Defaults to: `null`.
  - requestId (String.t): Globally unique identifier for a request, which is based on the request start time. Request IDs for requests which started later will compare greater as strings than those for requests which started earlier. Defaults to: `null`.
  - resource (String.t): Contains the path and query portion of the URL that was requested. For example, if the URL was \&quot;http://example.com/app?name&#x3D;val\&quot;, the resource would be \&quot;/app?name&#x3D;val\&quot;. The fragment identifier, which is identified by the # character, is not included. Defaults to: `null`.
  - responseSize (String.t): Size in bytes sent back to client by request. Defaults to: `null`.
  - sourceReference ([SourceReference]): Source code for the application that handled this request. There can be more than one source reference per deployed application if source code is distributed among multiple repositories. Defaults to: `null`.
  - startTime (DateTime.t): Time when the request started. Defaults to: `null`.
  - status (integer()): HTTP response status code. Example: 200, 404. Defaults to: `null`.
  - taskName (String.t): Task name of the request, in the case of an offline request. Defaults to: `null`.
  - taskQueueName (String.t): Queue name of the request, in the case of an offline request. Defaults to: `null`.
  - traceId (String.t): Stackdriver Trace identifier for this request. Defaults to: `null`.
  - traceSampled (boolean()): If true, the value in the &#39;trace_id&#39; field was sampled for storage in a trace backend. Defaults to: `null`.
  - urlMapEntry (String.t): File or class that handled the request. Defaults to: `null`.
  - userAgent (String.t): User agent that made the request. Defaults to: `null`.
  - versionId (String.t): Version of the application that handled this request. Defaults to: `null`.
  - wasLoadingRequest (boolean()): Whether this was a loading request for the instance. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :host => any(),
          :appEngineRelease => any(),
          :appId => any(),
          :cost => any(),
          :endTime => DateTime.t(),
          :finished => any(),
          :first => any(),
          :httpVersion => any(),
          :instanceId => any(),
          :instanceIndex => any(),
          :ip => any(),
          :latency => any(),
          :line => list(GoogleApi.Logging.V2.Model.LogLine.t()),
          :megaCycles => any(),
          :method => any(),
          :moduleId => any(),
          :nickname => any(),
          :pendingTime => any(),
          :referrer => any(),
          :requestId => any(),
          :resource => any(),
          :responseSize => any(),
          :sourceReference => list(GoogleApi.Logging.V2.Model.SourceReference.t()),
          :startTime => DateTime.t(),
          :status => any(),
          :taskName => any(),
          :taskQueueName => any(),
          :traceId => any(),
          :traceSampled => any(),
          :urlMapEntry => any(),
          :userAgent => any(),
          :versionId => any(),
          :wasLoadingRequest => any()
        }

  field(:host)
  field(:appEngineRelease)
  field(:appId)
  field(:cost)
  field(:endTime, as: DateTime)
  field(:finished)
  field(:first)
  field(:httpVersion)
  field(:instanceId)
  field(:instanceIndex)
  field(:ip)
  field(:latency)
  field(:line, as: GoogleApi.Logging.V2.Model.LogLine, type: :list)
  field(:megaCycles)
  field(:method)
  field(:moduleId)
  field(:nickname)
  field(:pendingTime)
  field(:referrer)
  field(:requestId)
  field(:resource)
  field(:responseSize)
  field(:sourceReference, as: GoogleApi.Logging.V2.Model.SourceReference, type: :list)
  field(:startTime, as: DateTime)
  field(:status)
  field(:taskName)
  field(:taskQueueName)
  field(:traceId)
  field(:traceSampled)
  field(:urlMapEntry)
  field(:userAgent)
  field(:versionId)
  field(:wasLoadingRequest)
end

defimpl Poison.Decoder, for: GoogleApi.Logging.V2.Model.RequestLog do
  def decode(value, options) do
    GoogleApi.Logging.V2.Model.RequestLog.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Logging.V2.Model.RequestLog do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
