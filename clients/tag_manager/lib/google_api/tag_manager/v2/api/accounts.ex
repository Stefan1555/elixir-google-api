# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.TagManager.V2.Api.Accounts do
  @moduledoc """
  API calls for all endpoints tagged `Accounts`.
  """

  alias GoogleApi.TagManager.V2.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Creates a Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Account&#39;s API relative path. Example: accounts/{account_id}.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Container): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Container{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_create(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.Container.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_create(connection, parent, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/containers", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Container{}])
  end

  @doc """
  Creates a GTM Environment.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Container&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Environment): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Environment{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_environments_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Environment.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_environments_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/environments", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Environment{}])
  end

  @doc """
  Lists all GTM Environments of a GTM Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Container&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListEnvironmentsResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_environments_list(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListEnvironmentsResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_environments_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/environments", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListEnvironmentsResponse{}]
    )
  end

  @doc """
  Updates a GTM Environment. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Environment&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :fingerprint (String.t): When provided, this fingerprint must match the fingerprint of the environment in storage.
    - :body (Environment): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Environment{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_environments_patch(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Environment.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_environments_patch(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :fingerprint => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url("/{+path}", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Environment{}])
  end

  @doc """
  Re-generates the authorization code for a GTM Environment.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Environment&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Environment): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Environment{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_environments_reauthorize(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Environment.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_environments_reauthorize(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:reauthorize", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Environment{}])
  end

  @doc """
  Lists all Containers that belongs to a GTM Account.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Accounts&#39;s API relative path. Example: accounts/{account_id}.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListContainersResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListContainersResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_list(connection, parent, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/containers", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListContainersResponse{}])
  end

  @doc """
  Gets the latest container version header

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Container&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ContainerVersionHeader{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_version_headers_latest(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.ContainerVersionHeader.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_version_headers_latest(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/version_headers:latest", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ContainerVersionHeader{}])
  end

  @doc """
  Lists all Container Versions of a GTM Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Container&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :includeDeleted (boolean()): Also retrieve deleted (archived) versions when true.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListContainerVersionsResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_version_headers_list(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListContainerVersionsResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_version_headers_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :includeDeleted => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/version_headers", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListContainerVersionsResponse{}]
    )
  end

  @doc """
  Gets the live (i.e. published) container version

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Container&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ContainerVersion{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_versions_live(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.ContainerVersion.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_versions_live(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/versions:live", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ContainerVersion{}])
  end

  @doc """
  Publishes a Container Version.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM ContainerVersion&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :fingerprint (String.t): When provided, this fingerprint must match the fingerprint of the container version in storage.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.PublishContainerVersionResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_versions_publish(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.PublishContainerVersionResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_versions_publish(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :fingerprint => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:publish", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.PublishContainerVersionResponse{}]
    )
  end

  @doc """
  Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM ContainerVersion&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ContainerVersion{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_versions_set_latest(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.ContainerVersion.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_versions_set_latest(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:set_latest", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ContainerVersion{}])
  end

  @doc """
  Undeletes a Container Version.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM ContainerVersion&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ContainerVersion{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_versions_undelete(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.ContainerVersion.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_versions_undelete(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:undelete", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ContainerVersion{}])
  end

  @doc """
  Creates one or more GTM Built-In Variables.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :type ([String.t]): The types of built-in variables to enable.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.CreateBuiltInVariableResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_built_in_variables_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.CreateBuiltInVariableResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_built_in_variables_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :type => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/built_in_variables", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.CreateBuiltInVariableResponse{}]
    )
  end

  @doc """
  Lists all the enabled Built-In Variables of a GTM Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListEnabledBuiltInVariablesResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_built_in_variables_list(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListEnabledBuiltInVariablesResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_built_in_variables_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/built_in_variables", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListEnabledBuiltInVariablesResponse{}]
    )
  end

  @doc """
  Reverts changes to a GTM Built-In Variables in a GTM Workspace.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM BuiltInVariable&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :type (String.t): The type of built-in variable to revert.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.RevertBuiltInVariableResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_built_in_variables_revert(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.RevertBuiltInVariableResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_built_in_variables_revert(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :type => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}/built_in_variables:revert", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.RevertBuiltInVariableResponse{}]
    )
  end

  @doc """
  Creates a Workspace.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM parent Container&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Workspace): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Workspace{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Workspace.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/workspaces", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Workspace{}])
  end

  @doc """
  Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (CreateContainerVersionRequestVersionOptions): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.CreateContainerVersionResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_create_version(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.CreateContainerVersionResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_create_version(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:create_version", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.CreateContainerVersionResponse{}]
    )
  end

  @doc """
  Creates a GTM Folder.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Folder): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Folder{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_folders_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Folder.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_folders_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/folders", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Folder{}])
  end

  @doc """
  List all entities in a GTM Folder.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Folder&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.FolderEntities{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_folders_entities(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.FolderEntities.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_folders_entities(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:entities", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.FolderEntities{}])
  end

  @doc """
  Lists all GTM Folders of a Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListFoldersResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_folders_list(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListFoldersResponse.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_folders_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/folders", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListFoldersResponse{}])
  end

  @doc """
  Moves entities to a GTM Folder.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Folder&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :tagId ([String.t]): The tags to be moved to the folder.
    - :triggerId ([String.t]): The triggers to be moved to the folder.
    - :variableId ([String.t]): The variables to be moved to the folder.
    - :body (Folder): 

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_folders_move_entities_to_folder(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_folders_move_entities_to_folder(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :tagId => :query,
      :triggerId => :query,
      :variableId => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:move_entities_to_folder", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Finds conflicting and modified entities in the workspace.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.GetWorkspaceStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_get_status(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.GetWorkspaceStatusResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_get_status(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+path}/status", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.GetWorkspaceStatusResponse{}]
    )
  end

  @doc """
  Lists all Workspaces that belong to a GTM Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM parent Container&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListWorkspacesResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListWorkspacesResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/workspaces", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListWorkspacesResponse{}])
  end

  @doc """
  Creates a GTM Workspace Proposal.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{aid}/containers/{cid}/workspace/{wid}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (CreateWorkspaceProposalRequest): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.WorkspaceProposal{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_proposal_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.WorkspaceProposal.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_proposal_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/proposal", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.WorkspaceProposal{}])
  end

  @doc """
  Quick previews a workspace by creating a fake container version from all entities in the provided workspace.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.QuickPreviewResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_quick_preview(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.QuickPreviewResponse.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_quick_preview(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:quick_preview", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.QuickPreviewResponse{}])
  end

  @doc """
  Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :fingerprint (String.t): When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict.
    - :body (Entity): 

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_resolve_conflict(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_resolve_conflict(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :fingerprint => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:resolve_conflict", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.SyncWorkspaceResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_sync(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.SyncWorkspaceResponse.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_sync(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:sync", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.SyncWorkspaceResponse{}])
  end

  @doc """
  Creates a GTM Tag.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Tag): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Tag{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_tags_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Tag.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_tags_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/tags", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Tag{}])
  end

  @doc """
  Lists all GTM Tags of a Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListTagsResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_tags_list(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.ListTagsResponse.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_tags_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/tags", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListTagsResponse{}])
  end

  @doc """
  Creates a GTM Trigger.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspaces&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Trigger): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Trigger{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_triggers_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Trigger.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_triggers_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/triggers", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Trigger{}])
  end

  @doc """
  Lists all GTM Triggers of a Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspaces&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListTriggersResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_triggers_list(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListTriggersResponse.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_triggers_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/triggers", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListTriggersResponse{}])
  end

  @doc """
  Creates a GTM Variable.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Variable): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.Variable{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_variables_create(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.TagManager.V2.Model.Variable.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_variables_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/variables", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.Variable{}])
  end

  @doc """
  Lists all GTM Variables of a Container.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Workspace&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListVariablesResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_variables_list(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListVariablesResponse.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_variables_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/variables", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListVariablesResponse{}])
  end

  @doc """
  Reverts changes to a GTM Variable in a GTM Workspace.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM Variable&#39;s API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :fingerprint (String.t): When provided, this fingerprint must match the fingerprint of the variable in storage.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.RevertVariableResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_containers_workspaces_variables_revert(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.TagManager.V2.Model.RevertVariableResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_containers_workspaces_variables_revert(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :fingerprint => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+path}:revert", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.RevertVariableResponse{}])
  end

  @doc """
  Lists all GTM Accounts that a user has access to.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListAccountsResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_list(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListAccountsResponse.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_list(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListAccountsResponse{}])
  end

  @doc """
  Creates a user&#39;s Account &amp; Container access.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Account&#39;s API relative path. Example: accounts/{account_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (UserPermission): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.UserPermission{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_user_permissions_create(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.UserPermission.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_user_permissions_create(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{+parent}/user_permissions", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.UserPermission{}])
  end

  @doc """
  Removes a user from the account, revoking access to it and all of its containers.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM UserPermission&#39;s API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :type ([String.t]): The types of built-in variables to delete.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_user_permissions_delete(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_user_permissions_delete(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :type => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url("/{+path}", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Gets a user&#39;s Account &amp; Container access.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM UserPermission&#39;s API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :containerVersionId (String.t): The GTM ContainerVersion ID. Specify published to retrieve the currently published version.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.UserPermission{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_user_permissions_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.UserPermission.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_user_permissions_get(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :containerVersionId => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+path}", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.UserPermission{}])
  end

  @doc """
  List all users that have access to the account along with Account and Container user access granted to each of them.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - parent (String.t): GTM Accounts&#39;s API relative path. Example: accounts/{account_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :pageToken (String.t): Continuation token for fetching the next page of results.

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.ListUserPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_user_permissions_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.ListUserPermissionsResponse.t()}
          | {:error, Tesla.Env.t()}
  def tagmanager_accounts_user_permissions_list(
        connection,
        parent,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{+parent}/user_permissions", %{
        "parent" => URI.encode_www_form(parent)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TagManager.V2.Model.ListUserPermissionsResponse{}]
    )
  end

  @doc """
  Updates a user&#39;s Account &amp; Container access.

  ## Parameters

  - connection (GoogleApi.TagManager.V2.Connection): Connection to server
  - path (String.t): GTM UserPermission&#39;s API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (UserPermission): When provided, this fingerprint must match the fingerprint of the variable in storage.
    - :body (Variable): 

  ## Returns

  {:ok, %GoogleApi.TagManager.V2.Model.UserPermission{}} on success
  {:error, info} on failure
  """
  @spec tagmanager_accounts_user_permissions_update(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.TagManager.V2.Model.UserPermission.t()} | {:error, Tesla.Env.t()}
  def tagmanager_accounts_user_permissions_update(
        connection,
        path,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:put)
      |> Request.url("/{+path}", %{
        "path" => URI.encode_www_form(path)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.TagManager.V2.Model.UserPermission{}])
  end
end
