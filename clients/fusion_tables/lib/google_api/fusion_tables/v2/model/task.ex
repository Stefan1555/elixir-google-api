# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.FusionTables.V2.Model.Task do
  @moduledoc """
  A background task on a table, initiated for time- or resource-consuming operations such as changing column types or deleting all rows.

  ## Attributes

  - kind (String.t): Type of the resource. This is always \&quot;fusiontables#task\&quot;. Defaults to: `null`.
  - progress (String.t): Task percentage completion. Defaults to: `null`.
  - started (boolean()): false while the table is busy with some other task. true if this background task is currently running. Defaults to: `null`.
  - taskId (String.t): Identifier for the task. Defaults to: `null`.
  - type (String.t): Type of background task. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :kind => any(),
          :progress => any(),
          :started => any(),
          :taskId => any(),
          :type => any()
        }

  field(:kind)
  field(:progress)
  field(:started)
  field(:taskId)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.FusionTables.V2.Model.Task do
  def decode(value, options) do
    GoogleApi.FusionTables.V2.Model.Task.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FusionTables.V2.Model.Task do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
