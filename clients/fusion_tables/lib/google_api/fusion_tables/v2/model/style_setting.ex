# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.FusionTables.V2.Model.StyleSetting do
  @moduledoc """
  Represents a complete StyleSettings object. The primary key is a combination of the tableId and a styleId.

  ## Attributes

  - kind (String.t): The kind of item this is. A StyleSetting contains the style definitions for points, lines, and polygons in a table. Since a table can have any one or all of them, a style definition can have point, line and polygon style definitions. Defaults to: `null`.
  - markerOptions (PointStyle): Style definition for points in the table. Defaults to: `null`.
  - name (String.t): Optional name for the style setting. Defaults to: `null`.
  - polygonOptions (PolygonStyle): Style definition for polygons in the table. Defaults to: `null`.
  - polylineOptions (LineStyle): Style definition for lines in the table. Defaults to: `null`.
  - styleId (integer()): Identifier for the style setting (unique only within tables). Defaults to: `null`.
  - tableId (String.t): Identifier for the table. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :kind => any(),
          :markerOptions => GoogleApi.FusionTables.V2.Model.PointStyle.t(),
          :name => any(),
          :polygonOptions => GoogleApi.FusionTables.V2.Model.PolygonStyle.t(),
          :polylineOptions => GoogleApi.FusionTables.V2.Model.LineStyle.t(),
          :styleId => any(),
          :tableId => any()
        }

  field(:kind)
  field(:markerOptions, as: GoogleApi.FusionTables.V2.Model.PointStyle)
  field(:name)
  field(:polygonOptions, as: GoogleApi.FusionTables.V2.Model.PolygonStyle)
  field(:polylineOptions, as: GoogleApi.FusionTables.V2.Model.LineStyle)
  field(:styleId)
  field(:tableId)
end

defimpl Poison.Decoder, for: GoogleApi.FusionTables.V2.Model.StyleSetting do
  def decode(value, options) do
    GoogleApi.FusionTables.V2.Model.StyleSetting.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FusionTables.V2.Model.StyleSetting do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
