# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.Router do
  @moduledoc """
  Router resource.

  ## Attributes

  - bgp (RouterBgp): BGP information specific to this router. Defaults to: `null`.
  - bgpPeers ([RouterBgpPeer]): BGP information that needs to be configured into the routing stack to establish the BGP peering. It must specify peer ASN and either interface name, IP, or peer IP. Please refer to RFC4273. Defaults to: `null`.
  - creationTimestamp (String.t): [Output Only] Creation timestamp in RFC3339 text format. Defaults to: `null`.
  - description (String.t): An optional description of this resource. Provide this property when you create the resource. Defaults to: `null`.
  - id (String.t): [Output Only] The unique identifier for the resource. This identifier is defined by the server. Defaults to: `null`.
  - interfaces ([RouterInterface]): Router interfaces. Each interface requires either one linked resource (e.g. linkedVpnTunnel), or IP address and IP address range (e.g. ipRange), or both. Defaults to: `null`.
  - kind (String.t): [Output Only] Type of resource. Always compute#router for routers. Defaults to: `null`.
  - name (String.t): Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &#x60;[a-z]([-a-z0-9]*[a-z0-9])?&#x60; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. Defaults to: `null`.
  - nats ([RouterNat]): A list of Nat services created in this router. Defaults to: `null`.
  - network (String.t): URI of the network to which this router belongs. Defaults to: `null`.
  - region (String.t): [Output Only] URI of the region where the router resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body. Defaults to: `null`.
  - selfLink (String.t): [Output Only] Server-defined URL for the resource. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bgp => GoogleApi.Compute.V1.Model.RouterBgp.t(),
          :bgpPeers => list(GoogleApi.Compute.V1.Model.RouterBgpPeer.t()),
          :creationTimestamp => any(),
          :description => any(),
          :id => any(),
          :interfaces => list(GoogleApi.Compute.V1.Model.RouterInterface.t()),
          :kind => any(),
          :name => any(),
          :nats => list(GoogleApi.Compute.V1.Model.RouterNat.t()),
          :network => any(),
          :region => any(),
          :selfLink => any()
        }

  field(:bgp, as: GoogleApi.Compute.V1.Model.RouterBgp)
  field(:bgpPeers, as: GoogleApi.Compute.V1.Model.RouterBgpPeer, type: :list)
  field(:creationTimestamp)
  field(:description)
  field(:id)
  field(:interfaces, as: GoogleApi.Compute.V1.Model.RouterInterface, type: :list)
  field(:kind)
  field(:name)
  field(:nats, as: GoogleApi.Compute.V1.Model.RouterNat, type: :list)
  field(:network)
  field(:region)
  field(:selfLink)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.Router do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.Router.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.Router do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
