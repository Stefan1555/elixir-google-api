# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.Snapshot do
  @moduledoc """
  A persistent disk snapshot resource. (&#x3D;&#x3D; resource_for beta.snapshots &#x3D;&#x3D;) (&#x3D;&#x3D; resource_for v1.snapshots &#x3D;&#x3D;)

  ## Attributes

  - creationTimestamp (String.t): [Output Only] Creation timestamp in RFC3339 text format. Defaults to: `null`.
  - description (String.t): An optional description of this resource. Provide this property when you create the resource. Defaults to: `null`.
  - diskSizeGb (String.t): [Output Only] Size of the snapshot, specified in GB. Defaults to: `null`.
  - id (String.t): [Output Only] The unique identifier for the resource. This identifier is defined by the server. Defaults to: `null`.
  - kind (String.t): [Output Only] Type of the resource. Always compute#snapshot for Snapshot resources. Defaults to: `null`.
  - labelFingerprint (binary()): A fingerprint for the labels being applied to this snapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.  To see the latest fingerprint, make a get() request to retrieve a snapshot. Defaults to: `null`.
  - labels (%{optional(String.t) &#x3D;&gt; String.t}): Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty. Defaults to: `null`.
  - licenseCodes ([String.t]): [Output Only] Integer license codes indicating which licenses are attached to this snapshot. Defaults to: `null`.
  - licenses ([String.t]): [Output Only] A list of public visible licenses that apply to this snapshot. This can be because the original image had licenses attached (such as a Windows image). Defaults to: `null`.
  - name (String.t): Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &#x60;[a-z]([-a-z0-9]*[a-z0-9])?&#x60; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. Defaults to: `null`.
  - selfLink (String.t): [Output Only] Server-defined URL for the resource. Defaults to: `null`.
  - snapshotEncryptionKey (CustomerEncryptionKey): Encrypts the snapshot using a customer-supplied encryption key.  After you encrypt a snapshot using a customer-supplied key, you must provide the same key if you use the image later For example, you must provide the encryption key when you create a disk from the encrypted snapshot in a future request.  Customer-supplied encryption keys do not protect access to metadata of the disk.  If you do not provide an encryption key when creating the snapshot, then the snapshot will be encrypted using an automatically generated key and you do not need to provide a key to use the snapshot later. Defaults to: `null`.
  - sourceDisk (String.t): [Output Only] The source disk used to create this snapshot. Defaults to: `null`.
  - sourceDiskEncryptionKey (CustomerEncryptionKey): The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key. Defaults to: `null`.
  - sourceDiskId (String.t): [Output Only] The ID value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name. Defaults to: `null`.
  - status (String.t): [Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING. Defaults to: `null`.
    - Enum - one of [CREATING, DELETING, FAILED, READY, UPLOADING]
  - storageBytes (String.t): [Output Only] A size of the storage used by the snapshot. As snapshots share storage, this number is expected to change with snapshot creation/deletion. Defaults to: `null`.
  - storageBytesStatus (String.t): [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date. Defaults to: `null`.
    - Enum - one of [UPDATING, UP_TO_DATE]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :creationTimestamp => any(),
          :description => any(),
          :diskSizeGb => any(),
          :id => any(),
          :kind => any(),
          :labelFingerprint => any(),
          :labels => map(),
          :licenseCodes => list(any()),
          :licenses => list(any()),
          :name => any(),
          :selfLink => any(),
          :snapshotEncryptionKey => GoogleApi.Compute.V1.Model.CustomerEncryptionKey.t(),
          :sourceDisk => any(),
          :sourceDiskEncryptionKey => GoogleApi.Compute.V1.Model.CustomerEncryptionKey.t(),
          :sourceDiskId => any(),
          :status => any(),
          :storageBytes => any(),
          :storageBytesStatus => any()
        }

  field(:creationTimestamp)
  field(:description)
  field(:diskSizeGb)
  field(:id)
  field(:kind)
  field(:labelFingerprint)
  field(:labels, type: :map)
  field(:licenseCodes, type: :list)
  field(:licenses, type: :list)
  field(:name)
  field(:selfLink)
  field(:snapshotEncryptionKey, as: GoogleApi.Compute.V1.Model.CustomerEncryptionKey)
  field(:sourceDisk)
  field(:sourceDiskEncryptionKey, as: GoogleApi.Compute.V1.Model.CustomerEncryptionKey)
  field(:sourceDiskId)
  field(:status)
  field(:storageBytes)
  field(:storageBytesStatus)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.Snapshot do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.Snapshot.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.Snapshot do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
