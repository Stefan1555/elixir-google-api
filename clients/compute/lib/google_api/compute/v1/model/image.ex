# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.Image do
  @moduledoc """
  An Image resource. (&#x3D;&#x3D; resource_for beta.images &#x3D;&#x3D;) (&#x3D;&#x3D; resource_for v1.images &#x3D;&#x3D;)

  ## Attributes

  - archiveSizeBytes (String.t): Size of the image tar.gz archive stored in Google Cloud Storage (in bytes). Defaults to: `null`.
  - creationTimestamp (String.t): [Output Only] Creation timestamp in RFC3339 text format. Defaults to: `null`.
  - deprecated (DeprecationStatus): The deprecation status associated with this image. Defaults to: `null`.
  - description (String.t): An optional description of this resource. Provide this property when you create the resource. Defaults to: `null`.
  - diskSizeGb (String.t): Size of the image when restored onto a persistent disk (in GB). Defaults to: `null`.
  - family (String.t): The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035. Defaults to: `null`.
  - guestOsFeatures ([GuestOsFeature]): A list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options. Defaults to: `null`.
  - id (String.t): [Output Only] The unique identifier for the resource. This identifier is defined by the server. Defaults to: `null`.
  - imageEncryptionKey (CustomerEncryptionKey): Encrypts the image using a customer-supplied encryption key.  After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).  Customer-supplied encryption keys do not protect access to metadata of the disk.  If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later. Defaults to: `null`.
  - kind (String.t): [Output Only] Type of the resource. Always compute#image for images. Defaults to: `null`.
  - labelFingerprint (binary()): A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.  To see the latest fingerprint, make a get() request to retrieve an image. Defaults to: `null`.
  - labels (%{optional(String.t) &#x3D;&gt; String.t}): Labels to apply to this image. These can be later modified by the setLabels method. Defaults to: `null`.
  - licenseCodes ([String.t]): Integer license codes indicating which licenses are attached to this image. Defaults to: `null`.
  - licenses ([String.t]): Any applicable license URI. Defaults to: `null`.
  - name (String.t): Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &#x60;[a-z]([-a-z0-9]*[a-z0-9])?&#x60; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. Defaults to: `null`.
  - rawDisk (ImageRawDisk):  Defaults to: `null`.
  - selfLink (String.t): [Output Only] Server-defined URL for the resource. Defaults to: `null`.
  - sourceDisk (String.t): URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:   - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk  - projects/project/zones/zone/disks/disk  - zones/zone/disks/disk Defaults to: `null`.
  - sourceDiskEncryptionKey (CustomerEncryptionKey): The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key. Defaults to: `null`.
  - sourceDiskId (String.t): [Output Only] The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name. Defaults to: `null`.
  - sourceImage (String.t): URL of the source image used to create this image. This can be a full or valid partial URL. You must provide exactly one of:   - this property, or   - the rawDisk.source property, or   - the sourceDisk property   in order to create an image. Defaults to: `null`.
  - sourceImageEncryptionKey (CustomerEncryptionKey): The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Defaults to: `null`.
  - sourceImageId (String.t): [Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name. Defaults to: `null`.
  - sourceSnapshot (String.t): URL of the source snapshot used to create this image. This can be a full or valid partial URL. You must provide exactly one of:   - this property, or   - the sourceImage property, or   - the rawDisk.source property, or   - the sourceDisk property   in order to create an image. Defaults to: `null`.
  - sourceSnapshotEncryptionKey (CustomerEncryptionKey): The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key. Defaults to: `null`.
  - sourceSnapshotId (String.t): [Output Only] The ID value of the snapshot used to create this image. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given snapshot name. Defaults to: `null`.
  - sourceType (String.t): The type of the image used to create this disk. The default and only value is RAW Defaults to: `null`.
    - Enum - one of [RAW]
  - status (String.t): [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY. Defaults to: `null`.
    - Enum - one of [FAILED, PENDING, READY]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :archiveSizeBytes => any(),
          :creationTimestamp => any(),
          :deprecated => GoogleApi.Compute.V1.Model.DeprecationStatus.t(),
          :description => any(),
          :diskSizeGb => any(),
          :family => any(),
          :guestOsFeatures => list(GoogleApi.Compute.V1.Model.GuestOsFeature.t()),
          :id => any(),
          :imageEncryptionKey => GoogleApi.Compute.V1.Model.CustomerEncryptionKey.t(),
          :kind => any(),
          :labelFingerprint => any(),
          :labels => map(),
          :licenseCodes => list(any()),
          :licenses => list(any()),
          :name => any(),
          :rawDisk => GoogleApi.Compute.V1.Model.ImageRawDisk.t(),
          :selfLink => any(),
          :sourceDisk => any(),
          :sourceDiskEncryptionKey => GoogleApi.Compute.V1.Model.CustomerEncryptionKey.t(),
          :sourceDiskId => any(),
          :sourceImage => any(),
          :sourceImageEncryptionKey => GoogleApi.Compute.V1.Model.CustomerEncryptionKey.t(),
          :sourceImageId => any(),
          :sourceSnapshot => any(),
          :sourceSnapshotEncryptionKey => GoogleApi.Compute.V1.Model.CustomerEncryptionKey.t(),
          :sourceSnapshotId => any(),
          :sourceType => any(),
          :status => any()
        }

  field(:archiveSizeBytes)
  field(:creationTimestamp)
  field(:deprecated, as: GoogleApi.Compute.V1.Model.DeprecationStatus)
  field(:description)
  field(:diskSizeGb)
  field(:family)
  field(:guestOsFeatures, as: GoogleApi.Compute.V1.Model.GuestOsFeature, type: :list)
  field(:id)
  field(:imageEncryptionKey, as: GoogleApi.Compute.V1.Model.CustomerEncryptionKey)
  field(:kind)
  field(:labelFingerprint)
  field(:labels, type: :map)
  field(:licenseCodes, type: :list)
  field(:licenses, type: :list)
  field(:name)
  field(:rawDisk, as: GoogleApi.Compute.V1.Model.ImageRawDisk)
  field(:selfLink)
  field(:sourceDisk)
  field(:sourceDiskEncryptionKey, as: GoogleApi.Compute.V1.Model.CustomerEncryptionKey)
  field(:sourceDiskId)
  field(:sourceImage)
  field(:sourceImageEncryptionKey, as: GoogleApi.Compute.V1.Model.CustomerEncryptionKey)
  field(:sourceImageId)
  field(:sourceSnapshot)
  field(:sourceSnapshotEncryptionKey, as: GoogleApi.Compute.V1.Model.CustomerEncryptionKey)
  field(:sourceSnapshotId)
  field(:sourceType)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.Image do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.Image.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.Image do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
