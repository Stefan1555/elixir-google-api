# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.RouterNatSubnetworkToNat do
  @moduledoc """
  Defines the IP ranges that want to use NAT for a subnetwork.

  ## Attributes

  - name (String.t): URL for the subnetwork resource to use NAT. Defaults to: `null`.
  - secondaryIpRangeNames ([String.t]): A list of the secondary ranges of the Subnetwork that are allowed to use NAT. This can be populated only if \&quot;LIST_OF_SECONDARY_IP_RANGES\&quot; is one of the values in source_ip_ranges_to_nat. Defaults to: `null`.
  - sourceIpRangesToNat ([String.t]): Specify the options for NAT ranges in the Subnetwork. All usages of single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The only valid option with multiple values is: [\&quot;PRIMARY_IP_RANGE\&quot;, \&quot;LIST_OF_SECONDARY_IP_RANGES\&quot;] Default: [ALL_IP_RANGES] Defaults to: `null`.
    - Enum - one of 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => any(),
          :secondaryIpRangeNames => list(any()),
          :sourceIpRangesToNat => list(any())
        }

  field(:name)
  field(:secondaryIpRangeNames, type: :list)
  field(:sourceIpRangesToNat, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.RouterNatSubnetworkToNat do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.RouterNatSubnetworkToNat.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.RouterNatSubnetworkToNat do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
