# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.NetworkInterface do
  @moduledoc """
  A network interface resource attached to an instance.

  ## Attributes

  - accessConfigs ([AccessConfig]): An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access. Defaults to: `null`.
  - aliasIpRanges ([AliasIpRange]): An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks. Defaults to: `null`.
  - fingerprint (binary()): Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface, otherwise the request will fail with error 412 conditionNotMet. Defaults to: `null`.
  - kind (String.t): [Output Only] Type of the resource. Always compute#networkInterface for network interfaces. Defaults to: `null`.
  - name (String.t): [Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc. Defaults to: `null`.
  - network (String.t): URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.  This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used.  If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:   - https://www.googleapis.com/compute/v1/projects/project/global/networks/network  - projects/project/global/networks/network  - global/networks/default Defaults to: `null`.
  - networkIP (String.t): An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system. Defaults to: `null`.
  - subnetwork (String.t): The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:   - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork  - regions/region/subnetworks/subnetwork Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessConfigs => list(GoogleApi.Compute.V1.Model.AccessConfig.t()),
          :aliasIpRanges => list(GoogleApi.Compute.V1.Model.AliasIpRange.t()),
          :fingerprint => any(),
          :kind => any(),
          :name => any(),
          :network => any(),
          :networkIP => any(),
          :subnetwork => any()
        }

  field(:accessConfigs, as: GoogleApi.Compute.V1.Model.AccessConfig, type: :list)
  field(:aliasIpRanges, as: GoogleApi.Compute.V1.Model.AliasIpRange, type: :list)
  field(:fingerprint)
  field(:kind)
  field(:name)
  field(:network)
  field(:networkIP)
  field(:subnetwork)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.NetworkInterface do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.NetworkInterface.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.NetworkInterface do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
