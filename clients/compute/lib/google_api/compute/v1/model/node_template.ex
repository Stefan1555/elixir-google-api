# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Compute.V1.Model.NodeTemplate do
  @moduledoc """
  A Node Template resource.

  ## Attributes

  - creationTimestamp (String.t): [Output Only] Creation timestamp in RFC3339 text format. Defaults to: `null`.
  - description (String.t): An optional description of this resource. Provide this property when you create the resource. Defaults to: `null`.
  - id (String.t): [Output Only] The unique identifier for the resource. This identifier is defined by the server. Defaults to: `null`.
  - kind (String.t): [Output Only] The type of the resource. Always compute#nodeTemplate for node templates. Defaults to: `null`.
  - name (String.t): The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &#x60;[a-z]([-a-z0-9]*[a-z0-9])?&#x60; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. Defaults to: `null`.
  - nodeAffinityLabels (%{optional(String.t) &#x3D;&gt; String.t}): Labels to use for node affinity, which will be used in instance scheduling. Defaults to: `null`.
  - nodeType (String.t): The node type to use for nodes group that are created from this template. Defaults to: `null`.
  - nodeTypeFlexibility (NodeTemplateNodeTypeFlexibility): The flexible properties of the desired node type. Node groups that use this node template will create nodes of a type that matches these properties.  This field is mutually exclusive with the node_type property; you can only define one or the other, but not both. Defaults to: `null`.
  - region (String.t): [Output Only] The name of the region where the node template resides, such as us-central1. Defaults to: `null`.
  - selfLink (String.t): [Output Only] Server-defined URL for the resource. Defaults to: `null`.
  - status (String.t): [Output Only] The status of the node template. One of the following values: CREATING, READY, and DELETING. Defaults to: `null`.
    - Enum - one of [CREATING, DELETING, INVALID, READY]
  - statusMessage (String.t): [Output Only] An optional, human-readable explanation of the status. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :creationTimestamp => any(),
          :description => any(),
          :id => any(),
          :kind => any(),
          :name => any(),
          :nodeAffinityLabels => map(),
          :nodeType => any(),
          :nodeTypeFlexibility => GoogleApi.Compute.V1.Model.NodeTemplateNodeTypeFlexibility.t(),
          :region => any(),
          :selfLink => any(),
          :status => any(),
          :statusMessage => any()
        }

  field(:creationTimestamp)
  field(:description)
  field(:id)
  field(:kind)
  field(:name)
  field(:nodeAffinityLabels, type: :map)
  field(:nodeType)
  field(:nodeTypeFlexibility, as: GoogleApi.Compute.V1.Model.NodeTemplateNodeTypeFlexibility)
  field(:region)
  field(:selfLink)
  field(:status)
  field(:statusMessage)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.NodeTemplate do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.NodeTemplate.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.NodeTemplate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
