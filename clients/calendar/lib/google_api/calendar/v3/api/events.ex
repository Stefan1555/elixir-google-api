# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Calendar.V3.Api.Events do
  @moduledoc """
  API calls for all endpoints tagged `Events`.
  """

  alias GoogleApi.Calendar.V3.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Deletes an event.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - event_id (String.t): Event identifier.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :sendNotifications (boolean()): Deprecated. Please use sendUpdates instead.  Whether to send notifications about the deletion of the event. Note that some emails might still be sent even if you set the value to false. The default is false.
    - :sendUpdates (String.t): Guests who should receive notifications about the deletion of the event.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_delete(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def calendar_events_delete(connection, calendar_id, event_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :sendNotifications => :query,
      :sendUpdates => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url("/calendars/{calendarId}/events/{eventId}", %{
        "calendarId" => URI.encode_www_form(calendar_id),
        "eventId" => URI.encode_www_form(event_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Returns an event.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - event_id (String.t): Event identifier.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :alwaysIncludeEmail (boolean()): Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
    - :maxAttendees (integer()): The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
    - :timeZone (String.t): Time zone used in the response. Optional. The default is the time zone of the calendar.

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Event{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_get(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Event.t()} | {:error, Tesla.Env.t()}
  def calendar_events_get(connection, calendar_id, event_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :alwaysIncludeEmail => :query,
      :maxAttendees => :query,
      :timeZone => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/calendars/{calendarId}/events/{eventId}", %{
        "calendarId" => URI.encode_www_form(calendar_id),
        "eventId" => URI.encode_www_form(event_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Event{}])
  end

  @doc """
  Imports an event. This operation is used to add a private copy of an existing event to a calendar.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :conferenceDataVersion (integer()): Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event&#39;s body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0.
    - :supportsAttachments (boolean()): Whether API client performing operation supports event attachments. Optional. The default is False.
    - :body (Event): 

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Event{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_import(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Event.t()} | {:error, Tesla.Env.t()}
  def calendar_events_import(connection, calendar_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :conferenceDataVersion => :query,
      :supportsAttachments => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/calendars/{calendarId}/events/import", %{
        "calendarId" => URI.encode_www_form(calendar_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Event{}])
  end

  @doc """
  Creates an event.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :conferenceDataVersion (integer()): Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event&#39;s body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0.
    - :maxAttendees (integer()): The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
    - :sendNotifications (boolean()): Deprecated. Please use sendUpdates instead.  Whether to send notifications about the creation of the new event. Note that some emails might still be sent even if you set the value to false. The default is false.
    - :sendUpdates (String.t): Whether to send notifications about the creation of the new event. Note that some emails might still be sent. The default is false.
    - :supportsAttachments (boolean()): Whether API client performing operation supports event attachments. Optional. The default is False.
    - :body (Event): 

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Event{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_insert(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Event.t()} | {:error, Tesla.Env.t()}
  def calendar_events_insert(connection, calendar_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :conferenceDataVersion => :query,
      :maxAttendees => :query,
      :sendNotifications => :query,
      :sendUpdates => :query,
      :supportsAttachments => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/calendars/{calendarId}/events", %{
        "calendarId" => URI.encode_www_form(calendar_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Event{}])
  end

  @doc """
  Returns instances of the specified recurring event.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - event_id (String.t): Recurring event identifier.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :alwaysIncludeEmail (boolean()): Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
    - :maxAttendees (integer()): The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
    - :maxResults (integer()): Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
    - :originalStart (String.t): The original start time of the instance in the result. Optional.
    - :pageToken (String.t): Token specifying which result page to return. Optional.
    - :showDeleted (boolean()): Whether to include deleted events (with status equals \&quot;cancelled\&quot;) in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.
    - :timeMax (DateTime.t): Upper bound (exclusive) for an event&#39;s start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset.
    - :timeMin (DateTime.t): Lower bound (inclusive) for an event&#39;s end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset.
    - :timeZone (String.t): Time zone used in the response. Optional. The default is the time zone of the calendar.

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Events{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_instances(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Events.t()} | {:error, Tesla.Env.t()}
  def calendar_events_instances(
        connection,
        calendar_id,
        event_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :alwaysIncludeEmail => :query,
      :maxAttendees => :query,
      :maxResults => :query,
      :originalStart => :query,
      :pageToken => :query,
      :showDeleted => :query,
      :timeMax => :query,
      :timeMin => :query,
      :timeZone => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/calendars/{calendarId}/events/{eventId}/instances", %{
        "calendarId" => URI.encode_www_form(calendar_id),
        "eventId" => URI.encode_www_form(event_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Events{}])
  end

  @doc """
  Returns events on the specified calendar.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :alwaysIncludeEmail (boolean()): Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
    - :iCalUID (String.t): Specifies event ID in the iCalendar format to be included in the response. Optional.
    - :maxAttendees (integer()): The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
    - :maxResults (integer()): Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
    - :orderBy (String.t): The order of the events returned in the result. Optional. The default is an unspecified, stable order.
    - :pageToken (String.t): Token specifying which result page to return. Optional.
    - :privateExtendedProperty ([String.t]): Extended properties constraint specified as propertyName&#x3D;value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
    - :q (String.t): Free text search terms to find events that match these terms in any field, except for extended properties. Optional.
    - :sharedExtendedProperty ([String.t]): Extended properties constraint specified as propertyName&#x3D;value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
    - :showDeleted (boolean()): Whether to include deleted events (with status equals \&quot;cancelled\&quot;) in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.
    - :showHiddenInvitations (boolean()): Whether to include hidden invitations in the result. Optional. The default is False.
    - :singleEvents (boolean()): Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.
    - :syncToken (String.t): Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.  These are:  - iCalUID  - orderBy  - privateExtendedProperty  - q  - sharedExtendedProperty  - timeMin  - timeMax  - updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.
    - :timeMax (DateTime.t): Upper bound (exclusive) for an event&#39;s start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored. If timeMin is set, timeMax must be greater than timeMin.
    - :timeMin (DateTime.t): Lower bound (inclusive) for an event&#39;s end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored. If timeMax is set, timeMin must be smaller than timeMax.
    - :timeZone (String.t): Time zone used in the response. Optional. The default is the time zone of the calendar.
    - :updatedMin (DateTime.t): Lower bound for an event&#39;s last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Events{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Events.t()} | {:error, Tesla.Env.t()}
  def calendar_events_list(connection, calendar_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :alwaysIncludeEmail => :query,
      :iCalUID => :query,
      :maxAttendees => :query,
      :maxResults => :query,
      :orderBy => :query,
      :pageToken => :query,
      :privateExtendedProperty => :query,
      :q => :query,
      :sharedExtendedProperty => :query,
      :showDeleted => :query,
      :showHiddenInvitations => :query,
      :singleEvents => :query,
      :syncToken => :query,
      :timeMax => :query,
      :timeMin => :query,
      :timeZone => :query,
      :updatedMin => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/calendars/{calendarId}/events", %{
        "calendarId" => URI.encode_www_form(calendar_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Events{}])
  end

  @doc """
  Moves an event to another calendar, i.e. changes an event&#39;s organizer.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier of the source calendar where the event currently is on.
  - event_id (String.t): Event identifier.
  - destination (String.t): Calendar identifier of the target calendar where the event is to be moved to.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :sendNotifications (boolean()): Deprecated. Please use sendUpdates instead.  Whether to send notifications about the change of the event&#39;s organizer. Note that some emails might still be sent even if you set the value to false. The default is false.
    - :sendUpdates (String.t): Guests who should receive notifications about the change of the event&#39;s organizer.

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Event{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_move(Tesla.Env.client(), String.t(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Event.t()} | {:error, Tesla.Env.t()}
  def calendar_events_move(
        connection,
        calendar_id,
        event_id,
        destination,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :sendNotifications => :query,
      :sendUpdates => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/calendars/{calendarId}/events/{eventId}/move", %{
        "calendarId" => URI.encode_www_form(calendar_id),
        "eventId" => URI.encode_www_form(event_id)
      })
      |> Request.add_param(:query, :destination, destination)
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Event{}])
  end

  @doc """
  Updates an event. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - event_id (String.t): Event identifier.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :alwaysIncludeEmail (boolean()): Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
    - :conferenceDataVersion (integer()): Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event&#39;s body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0.
    - :maxAttendees (integer()): The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
    - :sendNotifications (boolean()): Deprecated. Please use sendUpdates instead.  Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false.
    - :sendUpdates (String.t): Guests who should receive notifications about the event update (for example, title changes, etc.).
    - :supportsAttachments (boolean()): Whether API client performing operation supports event attachments. Optional. The default is False.
    - :body (Event): 

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Event{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_patch(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Event.t()} | {:error, Tesla.Env.t()}
  def calendar_events_patch(connection, calendar_id, event_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :alwaysIncludeEmail => :query,
      :conferenceDataVersion => :query,
      :maxAttendees => :query,
      :sendNotifications => :query,
      :sendUpdates => :query,
      :supportsAttachments => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url("/calendars/{calendarId}/events/{eventId}", %{
        "calendarId" => URI.encode_www_form(calendar_id),
        "eventId" => URI.encode_www_form(event_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Event{}])
  end

  @doc """
  Creates an event based on a simple text string.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - text (String.t): The text describing the event to be created.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :sendNotifications (boolean()): Deprecated. Please use sendUpdates instead.  Whether to send notifications about the creation of the event. Note that some emails might still be sent even if you set the value to false. The default is false.
    - :sendUpdates (String.t): Guests who should receive notifications about the creation of the new event.

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Event{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_quick_add(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Event.t()} | {:error, Tesla.Env.t()}
  def calendar_events_quick_add(connection, calendar_id, text, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :sendNotifications => :query,
      :sendUpdates => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/calendars/{calendarId}/events/quickAdd", %{
        "calendarId" => URI.encode_www_form(calendar_id)
      })
      |> Request.add_param(:query, :text, text)
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Event{}])
  end

  @doc """
  Updates an event.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - event_id (String.t): Event identifier.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :alwaysIncludeEmail (boolean()): Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
    - :conferenceDataVersion (integer()): Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event&#39;s body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0.
    - :maxAttendees (integer()): The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
    - :sendNotifications (boolean()): Deprecated. Please use sendUpdates instead.  Whether to send notifications about the event update (for example, description changes, etc.). Note that some emails might still be sent even if you set the value to false. The default is false.
    - :sendUpdates (String.t): Guests who should receive notifications about the event update (for example, title changes, etc.).
    - :supportsAttachments (boolean()): Whether API client performing operation supports event attachments. Optional. The default is False.
    - :body (Event): 

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Event{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_update(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Event.t()} | {:error, Tesla.Env.t()}
  def calendar_events_update(connection, calendar_id, event_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :alwaysIncludeEmail => :query,
      :conferenceDataVersion => :query,
      :maxAttendees => :query,
      :sendNotifications => :query,
      :sendUpdates => :query,
      :supportsAttachments => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:put)
      |> Request.url("/calendars/{calendarId}/events/{eventId}", %{
        "calendarId" => URI.encode_www_form(calendar_id),
        "eventId" => URI.encode_www_form(event_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Event{}])
  end

  @doc """
  Watch for changes to Events resources.

  ## Parameters

  - connection (GoogleApi.Calendar.V3.Connection): Connection to server
  - calendar_id (String.t): Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \&quot;primary\&quot; keyword.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :alwaysIncludeEmail (boolean()): Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
    - :iCalUID (String.t): Specifies event ID in the iCalendar format to be included in the response. Optional.
    - :maxAttendees (integer()): The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
    - :maxResults (integer()): Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
    - :orderBy (String.t): The order of the events returned in the result. Optional. The default is an unspecified, stable order.
    - :pageToken (String.t): Token specifying which result page to return. Optional.
    - :privateExtendedProperty ([String.t]): Extended properties constraint specified as propertyName&#x3D;value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
    - :q (String.t): Free text search terms to find events that match these terms in any field, except for extended properties. Optional.
    - :sharedExtendedProperty ([String.t]): Extended properties constraint specified as propertyName&#x3D;value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
    - :showDeleted (boolean()): Whether to include deleted events (with status equals \&quot;cancelled\&quot;) in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.
    - :showHiddenInvitations (boolean()): Whether to include hidden invitations in the result. Optional. The default is False.
    - :singleEvents (boolean()): Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.
    - :syncToken (String.t): Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False. There are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.  These are:  - iCalUID  - orderBy  - privateExtendedProperty  - q  - sharedExtendedProperty  - timeMin  - timeMax  - updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.
    - :timeMax (DateTime.t): Upper bound (exclusive) for an event&#39;s start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored. If timeMin is set, timeMax must be greater than timeMin.
    - :timeMin (DateTime.t): Lower bound (inclusive) for an event&#39;s end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored. If timeMax is set, timeMin must be smaller than timeMax.
    - :timeZone (String.t): Time zone used in the response. Optional. The default is the time zone of the calendar.
    - :updatedMin (DateTime.t): Lower bound for an event&#39;s last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.
    - :resource (Channel): 

  ## Returns

  {:ok, %GoogleApi.Calendar.V3.Model.Channel{}} on success
  {:error, info} on failure
  """
  @spec calendar_events_watch(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Calendar.V3.Model.Channel.t()} | {:error, Tesla.Env.t()}
  def calendar_events_watch(connection, calendar_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :alwaysIncludeEmail => :query,
      :iCalUID => :query,
      :maxAttendees => :query,
      :maxResults => :query,
      :orderBy => :query,
      :pageToken => :query,
      :privateExtendedProperty => :query,
      :q => :query,
      :sharedExtendedProperty => :query,
      :showDeleted => :query,
      :showHiddenInvitations => :query,
      :singleEvents => :query,
      :syncToken => :query,
      :timeMax => :query,
      :timeMin => :query,
      :timeZone => :query,
      :updatedMin => :query,
      :resource => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/calendars/{calendarId}/events/watch", %{
        "calendarId" => URI.encode_www_form(calendar_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Calendar.V3.Model.Channel{}])
  end
end
