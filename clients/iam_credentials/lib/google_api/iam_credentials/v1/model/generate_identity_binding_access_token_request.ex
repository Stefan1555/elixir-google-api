# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.IAMCredentials.V1.Model.GenerateIdentityBindingAccessTokenRequest do
  @moduledoc """


  ## Attributes

  - jwt (String.t): Required. Input token. Must be in JWT format according to RFC7523 (https://tools.ietf.org/html/rfc7523) and must have &#39;kid&#39; field in the header. Supported signing algorithms: RS256 (RS512, ES256, ES512 coming soon). Mandatory payload fields (along the lines of RFC 7523, section 3): - iss: issuer of the token. Must provide a discovery document at        $iss/.well-known/openid-configuration . The document needs to be        formatted according to section 4.2 of the OpenID Connect Discovery        1.0 specification. - iat: Issue time in seconds since epoch. Must be in the past. - exp: Expiration time in seconds since epoch. Must be less than 48 hours        after iat. We recommend to create tokens that last shorter than 6        hours to improve security unless business reasons mandate longer        expiration times. Shorter token lifetimes are generally more secure        since tokens that have been exfiltrated by attackers can be used for        a shorter time. you can configure the maximum lifetime of the        incoming token in the configuration of the mapper.        The resulting Google token will expire within an hour or at \&quot;exp\&quot;,        whichever is earlier. - sub: JWT subject, identity asserted in the JWT. - aud: Configured in the mapper policy. By default the service account        email.  Claims from the incoming token can be transferred into the output token accoding to the mapper configuration. The outgoing claim size is limited. Outgoing claims size must be less than 4kB serialized as JSON without whitespace.  Example header: {   \&quot;alg\&quot;: \&quot;RS256\&quot;,   \&quot;kid\&quot;: \&quot;92a4265e14ab04d4d228a48d10d4ca31610936f8\&quot; } Example payload: {   \&quot;iss\&quot;: \&quot;https://accounts.google.com\&quot;,   \&quot;iat\&quot;: 1517963104,   \&quot;exp\&quot;: 1517966704,   \&quot;aud\&quot;: \&quot;https://iamcredentials.googleapis.com/google.iam.credentials.v1.CloudGaia\&quot;,   \&quot;sub\&quot;: \&quot;113475438248934895348\&quot;,   \&quot;my_claims\&quot;: {     \&quot;additional_claim\&quot;: \&quot;value\&quot;   } } Defaults to: `null`.
  - scope ([String.t]): Code to identify the scopes to be included in the OAuth 2.0 access token. See https://developers.google.com/identity/protocols/googlescopes for more information. At least one value required. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :jwt => any(),
          :scope => list(any())
        }

  field(:jwt)
  field(:scope, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.IAMCredentials.V1.Model.GenerateIdentityBindingAccessTokenRequest do
  def decode(value, options) do
    GoogleApi.IAMCredentials.V1.Model.GenerateIdentityBindingAccessTokenRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.IAMCredentials.V1.Model.GenerateIdentityBindingAccessTokenRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
