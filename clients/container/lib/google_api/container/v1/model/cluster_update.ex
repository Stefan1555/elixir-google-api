# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Container.V1.Model.ClusterUpdate do
  @moduledoc """
  ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.

  ## Attributes

  - desiredAddonsConfig (AddonsConfig): Configurations for the various addons available to run in the cluster. Defaults to: `null`.
  - desiredImageType (String.t): The desired image type for the node pool. NOTE: Set the \&quot;desired_node_pool\&quot; field as well. Defaults to: `null`.
  - desiredLocations ([String.t]): The desired list of Google Compute Engine [zones](/compute/docs/zones#available) in which the cluster&#39;s nodes should be located. Changing the locations a cluster is in will result in nodes being either created or removed from the cluster, depending on whether locations are being added or removed.  This list must always include the cluster&#39;s primary zone. Defaults to: `null`.
  - desiredMasterAuthorizedNetworksConfig (MasterAuthorizedNetworksConfig): The desired configuration options for master authorized networks feature. Defaults to: `null`.
  - desiredMasterVersion (String.t): The Kubernetes version to change the master to.  Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior:  - \&quot;latest\&quot;: picks the highest valid Kubernetes version - \&quot;1.X\&quot;: picks the highest valid patch+gke.N patch in the 1.X version - \&quot;1.X.Y\&quot;: picks the highest valid gke.N patch in the 1.X.Y version - \&quot;1.X.Y-gke.N\&quot;: picks an explicit Kubernetes version - \&quot;-\&quot;: picks the default Kubernetes version Defaults to: `null`.
  - desiredMonitoringService (String.t): The monitoring service the cluster should use to write metrics. Currently available options:  * \&quot;monitoring.googleapis.com\&quot; - the Google Cloud Monitoring service * \&quot;none\&quot; - no metrics will be exported from the cluster Defaults to: `null`.
  - desiredNodePoolAutoscaling (NodePoolAutoscaling): Autoscaler configuration for the node pool specified in desired_node_pool_id. If there is only one pool in the cluster and desired_node_pool_id is not provided then the change applies to that single node pool. Defaults to: `null`.
  - desiredNodePoolId (String.t): The node pool to be upgraded. This field is mandatory if \&quot;desired_node_version\&quot;, \&quot;desired_image_family\&quot; or \&quot;desired_node_pool_autoscaling\&quot; is specified and there is more than one node pool on the cluster. Defaults to: `null`.
  - desiredNodeVersion (String.t): The Kubernetes version to change the nodes to (typically an upgrade).  Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior:  - \&quot;latest\&quot;: picks the highest valid Kubernetes version - \&quot;1.X\&quot;: picks the highest valid patch+gke.N patch in the 1.X version - \&quot;1.X.Y\&quot;: picks the highest valid gke.N patch in the 1.X.Y version - \&quot;1.X.Y-gke.N\&quot;: picks an explicit Kubernetes version - \&quot;-\&quot;: picks the Kubernetes master version Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :desiredAddonsConfig => GoogleApi.Container.V1.Model.AddonsConfig.t(),
          :desiredImageType => any(),
          :desiredLocations => list(any()),
          :desiredMasterAuthorizedNetworksConfig =>
            GoogleApi.Container.V1.Model.MasterAuthorizedNetworksConfig.t(),
          :desiredMasterVersion => any(),
          :desiredMonitoringService => any(),
          :desiredNodePoolAutoscaling => GoogleApi.Container.V1.Model.NodePoolAutoscaling.t(),
          :desiredNodePoolId => any(),
          :desiredNodeVersion => any()
        }

  field(:desiredAddonsConfig, as: GoogleApi.Container.V1.Model.AddonsConfig)
  field(:desiredImageType)
  field(:desiredLocations, type: :list)

  field(
    :desiredMasterAuthorizedNetworksConfig,
    as: GoogleApi.Container.V1.Model.MasterAuthorizedNetworksConfig
  )

  field(:desiredMasterVersion)
  field(:desiredMonitoringService)
  field(:desiredNodePoolAutoscaling, as: GoogleApi.Container.V1.Model.NodePoolAutoscaling)
  field(:desiredNodePoolId)
  field(:desiredNodeVersion)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.ClusterUpdate do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.ClusterUpdate.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.ClusterUpdate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
