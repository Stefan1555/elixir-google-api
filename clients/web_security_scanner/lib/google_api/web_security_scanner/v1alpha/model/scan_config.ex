# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.WebSecurityScanner.V1alpha.Model.ScanConfig do
  @moduledoc """
  A ScanConfig resource contains the configurations to launch a scan.

  ## Attributes

  - authentication (Authentication): The authentication configuration. If specified, service will use the authentication configuration during scanning. Defaults to: `null`.
  - blacklistPatterns ([String.t]): The blacklist URL patterns as described in https://cloud.google.com/security-scanner/docs/excluded-urls Defaults to: `null`.
  - displayName (String.t): Required. The user provided display name of the ScanConfig. Defaults to: `null`.
  - maxQps (integer()): The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error. Defaults to: `null`.
  - name (String.t): The resource name of the ScanConfig. The name follows the format of &#39;projects/{projectId}/scanConfigs/{scanConfigId}&#39;. The ScanConfig IDs are generated by the system. Defaults to: `null`.
  - schedule (Schedule): The schedule of the ScanConfig. Defaults to: `null`.
  - startingUrls ([String.t]): Required. The starting URLs from which the scanner finds site pages. Defaults to: `null`.
  - targetPlatforms ([String.t]): Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be used as a default. Defaults to: `null`.
    - Enum - one of 
  - userAgent (String.t): The user agent used during scanning. Defaults to: `null`.
    - Enum - one of [USER_AGENT_UNSPECIFIED, CHROME_LINUX, CHROME_ANDROID, SAFARI_IPHONE]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authentication => GoogleApi.WebSecurityScanner.V1alpha.Model.Authentication.t(),
          :blacklistPatterns => list(any()),
          :displayName => any(),
          :maxQps => any(),
          :name => any(),
          :schedule => GoogleApi.WebSecurityScanner.V1alpha.Model.Schedule.t(),
          :startingUrls => list(any()),
          :targetPlatforms => list(any()),
          :userAgent => any()
        }

  field(:authentication, as: GoogleApi.WebSecurityScanner.V1alpha.Model.Authentication)
  field(:blacklistPatterns, type: :list)
  field(:displayName)
  field(:maxQps)
  field(:name)
  field(:schedule, as: GoogleApi.WebSecurityScanner.V1alpha.Model.Schedule)
  field(:startingUrls, type: :list)
  field(:targetPlatforms, type: :list)
  field(:userAgent)
end

defimpl Poison.Decoder, for: GoogleApi.WebSecurityScanner.V1alpha.Model.ScanConfig do
  def decode(value, options) do
    GoogleApi.WebSecurityScanner.V1alpha.Model.ScanConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WebSecurityScanner.V1alpha.Model.ScanConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
