# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AndroidManagement.V1.Model.StatusReportingSettings do
  @moduledoc """
  Settings controlling the behavior of status reports.

  ## Attributes

  - applicationReportsEnabled (boolean()): Whether app reports are enabled. Defaults to: `null`.
  - deviceSettingsEnabled (boolean()): Whether device settings reporting is enabled. Defaults to: `null`.
  - displayInfoEnabled (boolean()): Whether displays reporting is enabled. Defaults to: `null`.
  - hardwareStatusEnabled (boolean()): Whether hardware status reporting is enabled. Defaults to: `null`.
  - memoryInfoEnabled (boolean()): Whether memory reporting is enabled. Defaults to: `null`.
  - networkInfoEnabled (boolean()): Whether network info reporting is enabled. Defaults to: `null`.
  - powerManagementEventsEnabled (boolean()): Whether power management event reporting is enabled. Defaults to: `null`.
  - softwareInfoEnabled (boolean()): Whether software info reporting is enabled. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :applicationReportsEnabled => any(),
          :deviceSettingsEnabled => any(),
          :displayInfoEnabled => any(),
          :hardwareStatusEnabled => any(),
          :memoryInfoEnabled => any(),
          :networkInfoEnabled => any(),
          :powerManagementEventsEnabled => any(),
          :softwareInfoEnabled => any()
        }

  field(:applicationReportsEnabled)
  field(:deviceSettingsEnabled)
  field(:displayInfoEnabled)
  field(:hardwareStatusEnabled)
  field(:memoryInfoEnabled)
  field(:networkInfoEnabled)
  field(:powerManagementEventsEnabled)
  field(:softwareInfoEnabled)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidManagement.V1.Model.StatusReportingSettings do
  def decode(value, options) do
    GoogleApi.AndroidManagement.V1.Model.StatusReportingSettings.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidManagement.V1.Model.StatusReportingSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
