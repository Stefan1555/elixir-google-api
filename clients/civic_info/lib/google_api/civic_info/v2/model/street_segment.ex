# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CivicInfo.V2.Model.StreetSegment do
  @moduledoc """


  ## Attributes

  - administrationRegionIds ([String.t]):  Defaults to: `null`.
  - beforeGeocodeId (String.t):  Defaults to: `null`.
  - catalistUniquePrecinctCode (String.t):  Defaults to: `null`.
  - city (String.t):  Defaults to: `null`.
  - cityCouncilDistrict (String.t):  Defaults to: `null`.
  - congressionalDistrict (String.t):  Defaults to: `null`.
  - contestIds ([String.t]):  Defaults to: `null`.
  - countyCouncilDistrict (String.t):  Defaults to: `null`.
  - countyFips (String.t):  Defaults to: `null`.
  - datasetId (String.t):  Defaults to: `null`.
  - earlyVoteSiteByIds ([String.t]):  Defaults to: `null`.
  - endHouseNumber (String.t):  Defaults to: `null`.
  - geocodedPoint (PointProto):  Defaults to: `null`.
  - geographicDivisionOcdIds ([String.t]):  Defaults to: `null`.
  - id (String.t):  Defaults to: `null`.
  - judicialDistrict (String.t):  Defaults to: `null`.
  - mailOnly (boolean()):  Defaults to: `null`.
  - municipalDistrict (String.t):  Defaults to: `null`.
  - ncoaAddress (String.t):  Defaults to: `null`.
  - oddOrEvens ([String.t]):  Defaults to: `null`.
  - originalId (String.t):  Defaults to: `null`.
  - pollinglocationByIds ([String.t]):  Defaults to: `null`.
  - precinctName (String.t):  Defaults to: `null`.
  - precinctOcdId (String.t):  Defaults to: `null`.
  - provenances ([Provenance]):  Defaults to: `null`.
  - published (boolean()):  Defaults to: `null`.
  - schoolDistrict (String.t):  Defaults to: `null`.
  - startHouseNumber (String.t):  Defaults to: `null`.
  - startLatE7 (String.t):  Defaults to: `null`.
  - startLngE7 (String.t):  Defaults to: `null`.
  - state (String.t):  Defaults to: `null`.
  - stateHouseDistrict (String.t):  Defaults to: `null`.
  - stateSenateDistrict (String.t):  Defaults to: `null`.
  - streetName (String.t):  Defaults to: `null`.
  - subAdministrativeAreaName (String.t):  Defaults to: `null`.
  - surrogateId (String.t):  Defaults to: `null`.
  - targetsmartUniquePrecinctCode (String.t):  Defaults to: `null`.
  - townshipDistrict (String.t):  Defaults to: `null`.
  - unitNumber (String.t):  Defaults to: `null`.
  - unitType (String.t):  Defaults to: `null`.
  - vanPrecinctCode (String.t):  Defaults to: `null`.
  - voterGeographicDivisionOcdIds ([String.t]):  Defaults to: `null`.
  - wardDistrict (String.t):  Defaults to: `null`.
  - wildcard (boolean()):  Defaults to: `null`.
  - zip (String.t):  Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :administrationRegionIds => list(any()),
          :beforeGeocodeId => any(),
          :catalistUniquePrecinctCode => any(),
          :city => any(),
          :cityCouncilDistrict => any(),
          :congressionalDistrict => any(),
          :contestIds => list(any()),
          :countyCouncilDistrict => any(),
          :countyFips => any(),
          :datasetId => any(),
          :earlyVoteSiteByIds => list(any()),
          :endHouseNumber => any(),
          :geocodedPoint => GoogleApi.CivicInfo.V2.Model.PointProto.t(),
          :geographicDivisionOcdIds => list(any()),
          :id => any(),
          :judicialDistrict => any(),
          :mailOnly => any(),
          :municipalDistrict => any(),
          :ncoaAddress => any(),
          :oddOrEvens => list(any()),
          :originalId => any(),
          :pollinglocationByIds => list(any()),
          :precinctName => any(),
          :precinctOcdId => any(),
          :provenances => list(GoogleApi.CivicInfo.V2.Model.Provenance.t()),
          :published => any(),
          :schoolDistrict => any(),
          :startHouseNumber => any(),
          :startLatE7 => any(),
          :startLngE7 => any(),
          :state => any(),
          :stateHouseDistrict => any(),
          :stateSenateDistrict => any(),
          :streetName => any(),
          :subAdministrativeAreaName => any(),
          :surrogateId => any(),
          :targetsmartUniquePrecinctCode => any(),
          :townshipDistrict => any(),
          :unitNumber => any(),
          :unitType => any(),
          :vanPrecinctCode => any(),
          :voterGeographicDivisionOcdIds => list(any()),
          :wardDistrict => any(),
          :wildcard => any(),
          :zip => any()
        }

  field(:administrationRegionIds, type: :list)
  field(:beforeGeocodeId)
  field(:catalistUniquePrecinctCode)
  field(:city)
  field(:cityCouncilDistrict)
  field(:congressionalDistrict)
  field(:contestIds, type: :list)
  field(:countyCouncilDistrict)
  field(:countyFips)
  field(:datasetId)
  field(:earlyVoteSiteByIds, type: :list)
  field(:endHouseNumber)
  field(:geocodedPoint, as: GoogleApi.CivicInfo.V2.Model.PointProto)
  field(:geographicDivisionOcdIds, type: :list)
  field(:id)
  field(:judicialDistrict)
  field(:mailOnly)
  field(:municipalDistrict)
  field(:ncoaAddress)
  field(:oddOrEvens, type: :list)
  field(:originalId)
  field(:pollinglocationByIds, type: :list)
  field(:precinctName)
  field(:precinctOcdId)
  field(:provenances, as: GoogleApi.CivicInfo.V2.Model.Provenance, type: :list)
  field(:published)
  field(:schoolDistrict)
  field(:startHouseNumber)
  field(:startLatE7)
  field(:startLngE7)
  field(:state)
  field(:stateHouseDistrict)
  field(:stateSenateDistrict)
  field(:streetName)
  field(:subAdministrativeAreaName)
  field(:surrogateId)
  field(:targetsmartUniquePrecinctCode)
  field(:townshipDistrict)
  field(:unitNumber)
  field(:unitType)
  field(:vanPrecinctCode)
  field(:voterGeographicDivisionOcdIds, type: :list)
  field(:wardDistrict)
  field(:wildcard)
  field(:zip)
end

defimpl Poison.Decoder, for: GoogleApi.CivicInfo.V2.Model.StreetSegment do
  def decode(value, options) do
    GoogleApi.CivicInfo.V2.Model.StreetSegment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CivicInfo.V2.Model.StreetSegment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
