# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Api.Rooms do
  @moduledoc """
  API calls for all endpoints tagged `Rooms`.
  """

  alias GoogleApi.Games.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Create a room. For internal use by the Games SDK only. Calling this method directly is unsupported.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :language (String.t): The preferred language to use for strings returned by this method.
    - :body (RoomCreateRequest): 

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.Room{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_create(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.Games.V1.Model.Room.t()} | {:error, Tesla.Env.t()}
  def games_rooms_create(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :language => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/rooms/create")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Games.V1.Model.Room{}])
  end

  @doc """
  Decline an invitation to join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - room_id (String.t): The ID of the room.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :language (String.t): The preferred language to use for strings returned by this method.

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.Room{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_decline(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Games.V1.Model.Room.t()} | {:error, Tesla.Env.t()}
  def games_rooms_decline(connection, room_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :language => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/rooms/{roomId}/decline", %{
        "roomId" => URI.encode_www_form(room_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Games.V1.Model.Room{}])
  end

  @doc """
  Dismiss an invitation to join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - room_id (String.t): The ID of the room.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_dismiss(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def games_rooms_dismiss(connection, room_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/rooms/{roomId}/dismiss", %{
        "roomId" => URI.encode_www_form(room_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Get the data for a room.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - room_id (String.t): The ID of the room.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :language (String.t): The preferred language to use for strings returned by this method.

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.Room{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Games.V1.Model.Room.t()} | {:error, Tesla.Env.t()}
  def games_rooms_get(connection, room_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :language => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/rooms/{roomId}", %{
        "roomId" => URI.encode_www_form(room_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Games.V1.Model.Room{}])
  end

  @doc """
  Join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - room_id (String.t): The ID of the room.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :language (String.t): The preferred language to use for strings returned by this method.
    - :body (RoomJoinRequest): 

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.Room{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_join(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Games.V1.Model.Room.t()} | {:error, Tesla.Env.t()}
  def games_rooms_join(connection, room_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :language => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/rooms/{roomId}/join", %{
        "roomId" => URI.encode_www_form(room_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Games.V1.Model.Room{}])
  end

  @doc """
  Leave a room. For internal use by the Games SDK only. Calling this method directly is unsupported.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - room_id (String.t): The ID of the room.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :language (String.t): The preferred language to use for strings returned by this method.
    - :body (RoomLeaveRequest): 

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.Room{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_leave(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Games.V1.Model.Room.t()} | {:error, Tesla.Env.t()}
  def games_rooms_leave(connection, room_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :language => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/rooms/{roomId}/leave", %{
        "roomId" => URI.encode_www_form(room_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Games.V1.Model.Room{}])
  end

  @doc """
  Returns invitations to join rooms.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :language (String.t): The preferred language to use for strings returned by this method.
    - :maxResults (integer()): The maximum number of rooms to return in the response, used for paging. For any response, the actual number of rooms to return may be less than the specified maxResults.
    - :pageToken (String.t): The token returned by the previous request.

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.RoomList{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_list(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.Games.V1.Model.RoomList.t()} | {:error, Tesla.Env.t()}
  def games_rooms_list(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :language => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/rooms")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Games.V1.Model.RoomList{}])
  end

  @doc """
  Updates sent by a client reporting the status of peers in a room. For internal use by the Games SDK only. Calling this method directly is unsupported.

  ## Parameters

  - connection (GoogleApi.Games.V1.Connection): Connection to server
  - room_id (String.t): The ID of the room.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :language (String.t): The preferred language to use for strings returned by this method.
    - :body (RoomP2PStatuses): 

  ## Returns

  {:ok, %GoogleApi.Games.V1.Model.RoomStatus{}} on success
  {:error, info} on failure
  """
  @spec games_rooms_report_status(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Games.V1.Model.RoomStatus.t()} | {:error, Tesla.Env.t()}
  def games_rooms_report_status(connection, room_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :language => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/rooms/{roomId}/reportstatus", %{
        "roomId" => URI.encode_www_form(room_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Games.V1.Model.RoomStatus{}])
  end
end
