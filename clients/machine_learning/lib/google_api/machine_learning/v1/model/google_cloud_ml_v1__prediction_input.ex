# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1PredictionInput do
  @moduledoc """
  Represents input parameters for a prediction job. Next field: 19

  ## Attributes

  - accelerator (GoogleCloudMlV1AcceleratorConfig): Optional. The type and number of accelerators to be attached to each machine running the job. Defaults to: `null`.
  - batchSize (String.t): Optional. Number of records per batch, defaults to 64. The service will buffer batch_size number of records in memory before invoking one Tensorflow prediction call internally. So take the record size and memory available into consideration when setting this parameter. Defaults to: `null`.
  - dataFormat (String.t): Required. The format of the input data files. Defaults to: `null`.
    - Enum - one of [DATA_FORMAT_UNSPECIFIED, JSON, TEXT, TF_RECORD, TF_RECORD_GZIP, CSV]
  - inputPaths ([String.t]): Required. The Google Cloud Storage location of the input data files. May contain wildcards. Defaults to: `null`.
  - maxWorkerCount (String.t): Optional. The maximum number of workers to be used for parallel processing. Defaults to 10 if not specified. Defaults to: `null`.
  - modelName (String.t): Use this field if you want to use the default version for the specified model. The string must use the following format:  &#x60;\&quot;projects/YOUR_PROJECT/models/YOUR_MODEL\&quot;&#x60; Defaults to: `null`.
  - outputDataFormat (String.t): Optional. Format of the output data files, defaults to JSON. Defaults to: `null`.
    - Enum - one of [DATA_FORMAT_UNSPECIFIED, JSON, TEXT, TF_RECORD, TF_RECORD_GZIP, CSV]
  - outputPath (String.t): Required. The output Google Cloud Storage location. Defaults to: `null`.
  - region (String.t): Required. The Google Compute Engine region to run the prediction job in. See the &lt;a href&#x3D;\&quot;/ml-engine/docs/tensorflow/regions\&quot;&gt;available regions&lt;/a&gt; for ML Engine services. Defaults to: `null`.
  - runtimeVersion (String.t): Optional. The Google Cloud ML runtime version to use for this batch prediction. If not set, Google Cloud ML will pick the runtime version used during the CreateVersion request for this model version, or choose the latest stable version when model version information is not available such as when the model is specified by uri. Defaults to: `null`.
  - signatureName (String.t): Optional. The name of the signature defined in the SavedModel to use for this job. Please refer to [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for information about how to use signatures.  Defaults to [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants) , which is \&quot;serving_default\&quot;. Defaults to: `null`.
  - uri (String.t): Use this field if you want to specify a Google Cloud Storage path for the model to use. Defaults to: `null`.
  - versionName (String.t): Use this field if you want to specify a version of the model to use. The string is formatted the same way as &#x60;model_version&#x60;, with the addition of the version information:  &#x60;\&quot;projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION\&quot;&#x60; Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accelerator => GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1AcceleratorConfig.t(),
          :batchSize => any(),
          :dataFormat => any(),
          :inputPaths => list(any()),
          :maxWorkerCount => any(),
          :modelName => any(),
          :outputDataFormat => any(),
          :outputPath => any(),
          :region => any(),
          :runtimeVersion => any(),
          :signatureName => any(),
          :uri => any(),
          :versionName => any()
        }

  field(:accelerator, as: GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1AcceleratorConfig)
  field(:batchSize)
  field(:dataFormat)
  field(:inputPaths, type: :list)
  field(:maxWorkerCount)
  field(:modelName)
  field(:outputDataFormat)
  field(:outputPath)
  field(:region)
  field(:runtimeVersion)
  field(:signatureName)
  field(:uri)
  field(:versionName)
end

defimpl Poison.Decoder, for: GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1PredictionInput do
  def decode(value, options) do
    GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1PredictionInput.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1PredictionInput do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
