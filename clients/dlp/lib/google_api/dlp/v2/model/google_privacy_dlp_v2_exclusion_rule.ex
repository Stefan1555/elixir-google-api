# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExclusionRule do
  @moduledoc """
  The rule that specifies conditions when findings of infoTypes specified in &#x60;InspectionRuleSet&#x60; are removed from results.

  ## Attributes

  - dictionary (GooglePrivacyDlpV2Dictionary): Dictionary which defines the rule. Defaults to: `null`.
  - excludeInfoTypes (GooglePrivacyDlpV2ExcludeInfoTypes): Set of infoTypes for which findings would affect this rule. Defaults to: `null`.
  - matchingType (String.t): How the rule is applied, see MatchingType documentation for details. Defaults to: `null`.
    - Enum - one of [MATCHING_TYPE_UNSPECIFIED, MATCHING_TYPE_FULL_MATCH, MATCHING_TYPE_PARTIAL_MATCH, MATCHING_TYPE_INVERSE_MATCH]
  - regex (GooglePrivacyDlpV2Regex): Regular expression which defines the rule. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dictionary => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Dictionary.t(),
          :excludeInfoTypes => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExcludeInfoTypes.t(),
          :matchingType => any(),
          :regex => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Regex.t()
        }

  field(:dictionary, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Dictionary)
  field(:excludeInfoTypes, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExcludeInfoTypes)
  field(:matchingType)
  field(:regex, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Regex)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExclusionRule do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExclusionRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ExclusionRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
