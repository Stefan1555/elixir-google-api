# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceConsumerManagement.V1.Model.MetricDescriptor do
  @moduledoc """
  Defines a metric type and its schema. Once a metric descriptor is created, deleting or altering it stops data collection and makes the metric type&#39;s existing data unusable.

  ## Attributes

  - description (String.t): A detailed description of the metric, which can be used in documentation. Defaults to: `null`.
  - displayName (String.t): A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example \&quot;Request count\&quot;. This field is optional but it is recommended to be set for any metrics associated with user-visible concepts, such as Quota. Defaults to: `null`.
  - labels ([LabelDescriptor]): The set of labels that can be used to describe a specific instance of this metric type. For example, the &#x60;appengine.googleapis.com/http/server/response_latencies&#x60; metric type has a label for the HTTP response code, &#x60;response_code&#x60;, so you can look at latencies for successful responses or just for responses that failed. Defaults to: `null`.
  - metadata (MetricDescriptorMetadata): Optional. Metadata which can be used to guide usage of the metric. Defaults to: `null`.
  - metricKind (String.t): Whether the metric records instantaneous values, changes to a value, etc. Some combinations of &#x60;metric_kind&#x60; and &#x60;value_type&#x60; might not be supported. Defaults to: `null`.
    - Enum - one of [METRIC_KIND_UNSPECIFIED, GAUGE, DELTA, CUMULATIVE]
  - name (String.t): The resource name of the metric descriptor. Defaults to: `null`.
  - type (String.t): The metric type, including its DNS name prefix. The type is not URL-encoded.  All user-defined metric types have the DNS name &#x60;custom.googleapis.com&#x60; or &#x60;external.googleapis.com&#x60;.  Metric types should use a natural hierarchical grouping. For example:      \&quot;custom.googleapis.com/invoice/paid/amount\&quot;     \&quot;external.googleapis.com/prometheus/up\&quot;     \&quot;appengine.googleapis.com/http/server/response_latencies\&quot; Defaults to: `null`.
  - unit (String.t): The unit in which the metric value is reported. It is only applicable if the &#x60;value_type&#x60; is &#x60;INT64&#x60;, &#x60;DOUBLE&#x60;, or &#x60;DISTRIBUTION&#x60;. The supported units are a subset of [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard:  **Basic units (UNIT)**  * &#x60;bit&#x60;   bit * &#x60;By&#x60;    byte * &#x60;s&#x60;     second * &#x60;min&#x60;   minute * &#x60;h&#x60;     hour * &#x60;d&#x60;     day  **Prefixes (PREFIX)**  * &#x60;k&#x60;     kilo    (10**3) * &#x60;M&#x60;     mega    (10**6) * &#x60;G&#x60;     giga    (10**9) * &#x60;T&#x60;     tera    (10**12) * &#x60;P&#x60;     peta    (10**15) * &#x60;E&#x60;     exa     (10**18) * &#x60;Z&#x60;     zetta   (10**21) * &#x60;Y&#x60;     yotta   (10**24) * &#x60;m&#x60;     milli   (10**-3) * &#x60;u&#x60;     micro   (10**-6) * &#x60;n&#x60;     nano    (10**-9) * &#x60;p&#x60;     pico    (10**-12) * &#x60;f&#x60;     femto   (10**-15) * &#x60;a&#x60;     atto    (10**-18) * &#x60;z&#x60;     zepto   (10**-21) * &#x60;y&#x60;     yocto   (10**-24) * &#x60;Ki&#x60;    kibi    (2**10) * &#x60;Mi&#x60;    mebi    (2**20) * &#x60;Gi&#x60;    gibi    (2**30) * &#x60;Ti&#x60;    tebi    (2**40)  **Grammar**  The grammar also includes these connectors:  * &#x60;/&#x60;    division (as an infix operator, e.g. &#x60;1/s&#x60;). * &#x60;.&#x60;    multiplication (as an infix operator, e.g. &#x60;GBy.d&#x60;)  The grammar for a unit is as follows:      Expression &#x3D; Component { \&quot;.\&quot; Component } { \&quot;/\&quot; Component } ;      Component &#x3D; ( [ PREFIX ] UNIT | \&quot;%\&quot; ) [ Annotation ]               | Annotation               | \&quot;1\&quot;               ;      Annotation &#x3D; \&quot;{\&quot; NAME \&quot;}\&quot; ;  Notes:  * &#x60;Annotation&#x60; is just a comment if it follows a &#x60;UNIT&#x60; and is    equivalent to &#x60;1&#x60; if it is used alone. For examples,    &#x60;{requests}/s &#x3D;&#x3D; 1/s&#x60;, &#x60;By{transmitted}/s &#x3D;&#x3D; By/s&#x60;. * &#x60;NAME&#x60; is a sequence of non-blank printable ASCII characters not    containing &#39;{&#39; or &#39;}&#39;. * &#x60;1&#x60; represents dimensionless value 1, such as in &#x60;1/s&#x60;. * &#x60;%&#x60; represents dimensionless value 1/100, and annotates values giving    a percentage. Defaults to: `null`.
  - valueType (String.t): Whether the measurement is an integer, a floating-point number, etc. Some combinations of &#x60;metric_kind&#x60; and &#x60;value_type&#x60; might not be supported. Defaults to: `null`.
    - Enum - one of [VALUE_TYPE_UNSPECIFIED, BOOL, INT64, DOUBLE, STRING, DISTRIBUTION, MONEY]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => any(),
          :displayName => any(),
          :labels => list(GoogleApi.ServiceConsumerManagement.V1.Model.LabelDescriptor.t()),
          :metadata => GoogleApi.ServiceConsumerManagement.V1.Model.MetricDescriptorMetadata.t(),
          :metricKind => any(),
          :name => any(),
          :type => any(),
          :unit => any(),
          :valueType => any()
        }

  field(:description)
  field(:displayName)
  field(:labels, as: GoogleApi.ServiceConsumerManagement.V1.Model.LabelDescriptor, type: :list)
  field(:metadata, as: GoogleApi.ServiceConsumerManagement.V1.Model.MetricDescriptorMetadata)
  field(:metricKind)
  field(:name)
  field(:type)
  field(:unit)
  field(:valueType)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceConsumerManagement.V1.Model.MetricDescriptor do
  def decode(value, options) do
    GoogleApi.ServiceConsumerManagement.V1.Model.MetricDescriptor.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceConsumerManagement.V1.Model.MetricDescriptor do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
