# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.ServiceConsumerManagement.V1.Model.Http do
  @moduledoc """
  Defines the HTTP configuration for an API service. It contains a list of HttpRule, each specifying the mapping of an RPC method to one or more HTTP REST API methods.

  ## Attributes

  - fullyDecodeReservedExpansion (boolean()): When set to true, URL path parmeters will be fully URI-decoded except in cases of single segment matches in reserved expansion, where \&quot;%2F\&quot; will be left encoded.  The default behavior is to not decode RFC 6570 reserved characters in multi segment matches. Defaults to: `null`.
  - rules ([HttpRule]): A list of HTTP configuration rules that apply to individual API methods.  **NOTE:** All service configuration rules follow \&quot;last one wins\&quot; order. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fullyDecodeReservedExpansion => any(),
          :rules => list(GoogleApi.ServiceConsumerManagement.V1.Model.HttpRule.t())
        }

  field(:fullyDecodeReservedExpansion)
  field(:rules, as: GoogleApi.ServiceConsumerManagement.V1.Model.HttpRule, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceConsumerManagement.V1.Model.Http do
  def decode(value, options) do
    GoogleApi.ServiceConsumerManagement.V1.Model.Http.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceConsumerManagement.V1.Model.Http do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
