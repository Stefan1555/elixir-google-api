# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.TextToSpeech.V1beta1.Model.Voice do
  @moduledoc """
  Description of a voice supported by the TTS service.

  ## Attributes

  - languageCodes ([String.t]): The languages that this voice supports, expressed as [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags (e.g. \&quot;en-US\&quot;, \&quot;es-419\&quot;, \&quot;cmn-tw\&quot;). Defaults to: `null`.
  - name (String.t): The name of this voice.  Each distinct voice has a unique name. Defaults to: `null`.
  - naturalSampleRateHertz (integer()): The natural sample rate (in hertz) for this voice. Defaults to: `null`.
  - ssmlGender (String.t): The gender of this voice. Defaults to: `null`.
    - Enum - one of [SSML_VOICE_GENDER_UNSPECIFIED, MALE, FEMALE, NEUTRAL]
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :languageCodes => list(any()),
          :name => any(),
          :naturalSampleRateHertz => any(),
          :ssmlGender => any()
        }

  field(:languageCodes, type: :list)
  field(:name)
  field(:naturalSampleRateHertz)
  field(:ssmlGender)
end

defimpl Poison.Decoder, for: GoogleApi.TextToSpeech.V1beta1.Model.Voice do
  def decode(value, options) do
    GoogleApi.TextToSpeech.V1beta1.Model.Voice.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TextToSpeech.V1beta1.Model.Voice do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
