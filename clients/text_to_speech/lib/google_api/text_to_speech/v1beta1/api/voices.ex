# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.TextToSpeech.V1beta1.Api.Voices do
  @moduledoc """
  API calls for all endpoints tagged `Voices`.
  """

  alias GoogleApi.TextToSpeech.V1beta1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Returns a list of Voice supported for synthesis.

  ## Parameters

  - connection (GoogleApi.TextToSpeech.V1beta1.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :languageCode (String.t): Optional (but recommended) [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. If specified, the ListVoices call will only return voices that can be used to synthesize this language_code. E.g. when specifying \&quot;en-NZ\&quot;, you will get supported \&quot;en-*\&quot; voices; when specifying \&quot;no\&quot;, you will get supported \&quot;no-*\&quot; (Norwegian) and \&quot;nb-*\&quot; (Norwegian Bokmal) voices; specifying \&quot;zh\&quot; will also get supported \&quot;cmn-*\&quot; voices; specifying \&quot;zh-hk\&quot; will also get supported \&quot;yue-*\&quot; voices.

  ## Returns

  {:ok, %GoogleApi.TextToSpeech.V1beta1.Model.ListVoicesResponse{}} on success
  {:error, info} on failure
  """
  @spec texttospeech_voices_list(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.TextToSpeech.V1beta1.Model.ListVoicesResponse.t()}
          | {:error, Tesla.Env.t()}
  def texttospeech_voices_list(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :languageCode => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1beta1/voices")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.TextToSpeech.V1beta1.Model.ListVoicesResponse{}]
    )
  end
end
