# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Chat.V1.Model.DeprecatedEvent do
  @moduledoc """
  Hangouts Chat events.

  ## Attributes

  - action (FormAction): The form action data associated with an interactive card that was clicked. Only populated for CARD_CLICKED events. See the [Interactive Cards guide](/hangouts/chat/how-tos/cards-onclick) for more information. Defaults to: `null`.
  - configCompleteRedirectUrl (String.t): The URL the bot should redirect the user to after they have completed an authorization or configuration flow outside of Hangouts Chat. See the [Authorizing access to 3p services guide](/hangouts/chat/how-tos/auth-3p) for more information. Defaults to: `null`.
  - eventTime (DateTime.t): The timestamp indicating when the event was dispatched. Defaults to: `null`.
  - message (Message): The message that triggered the event, if applicable. Defaults to: `null`.
  - space (Space): The room or DM in which the event occurred. Defaults to: `null`.
  - threadKey (String.t): The bot-defined key for the thread related to the event. See the thread_key field of the &#x60;spaces.message.create&#x60; request for more information. Defaults to: `null`.
  - token (String.t): A secret value that bots can use to verify if a request is from Google. The token is randomly generated by Google, remains static, and can be obtained from the Hangouts Chat API configuration page in the Cloud Console. Developers can revoke/regenerate it if needed from the same page. Defaults to: `null`.
  - type (String.t): The type of the event. Defaults to: `null`.
    - Enum - one of [UNSPECIFIED, MESSAGE, ADDED_TO_SPACE, REMOVED_FROM_SPACE, CARD_CLICKED]
  - user (User): The user that triggered the event. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :action => GoogleApi.Chat.V1.Model.FormAction.t(),
          :configCompleteRedirectUrl => any(),
          :eventTime => DateTime.t(),
          :message => GoogleApi.Chat.V1.Model.Message.t(),
          :space => GoogleApi.Chat.V1.Model.Space.t(),
          :threadKey => any(),
          :token => any(),
          :type => any(),
          :user => GoogleApi.Chat.V1.Model.User.t()
        }

  field(:action, as: GoogleApi.Chat.V1.Model.FormAction)
  field(:configCompleteRedirectUrl)
  field(:eventTime, as: DateTime)
  field(:message, as: GoogleApi.Chat.V1.Model.Message)
  field(:space, as: GoogleApi.Chat.V1.Model.Space)
  field(:threadKey)
  field(:token)
  field(:type)
  field(:user, as: GoogleApi.Chat.V1.Model.User)
end

defimpl Poison.Decoder, for: GoogleApi.Chat.V1.Model.DeprecatedEvent do
  def decode(value, options) do
    GoogleApi.Chat.V1.Model.DeprecatedEvent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Chat.V1.Model.DeprecatedEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
