# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Analytics.V3.Model.Upload do
  @moduledoc """
  Metadata returned for an upload operation.

  ## Attributes

  - accountId (String.t): Account Id to which this upload belongs. Defaults to: `null`.
  - customDataSourceId (String.t): Custom data source Id to which this data import belongs. Defaults to: `null`.
  - errors ([String.t]): Data import errors collection. Defaults to: `null`.
  - id (String.t): A unique ID for this upload. Defaults to: `null`.
  - kind (String.t): Resource type for Analytics upload. Defaults to: `null`.
  - status (String.t): Upload status. Possible values: PENDING, COMPLETED, FAILED, DELETING, DELETED. Defaults to: `null`.
  - uploadTime (DateTime.t): Time this file is uploaded. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accountId => any(),
          :customDataSourceId => any(),
          :errors => list(any()),
          :id => any(),
          :kind => any(),
          :status => any(),
          :uploadTime => DateTime.t()
        }

  field(:accountId)
  field(:customDataSourceId)
  field(:errors, type: :list)
  field(:id)
  field(:kind)
  field(:status)
  field(:uploadTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Analytics.V3.Model.Upload do
  def decode(value, options) do
    GoogleApi.Analytics.V3.Model.Upload.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Analytics.V3.Model.Upload do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
