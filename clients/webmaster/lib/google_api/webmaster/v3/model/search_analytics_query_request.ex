# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Webmaster.V3.Model.SearchAnalyticsQueryRequest do
  @moduledoc """


  ## Attributes

  - aggregationType (String.t): [Optional; Default is \&quot;auto\&quot;] How data is aggregated. If aggregated by property, all data for the same property is aggregated; if aggregated by page, all data is aggregated by canonical URI. If you filter or group by page, choose AUTO; otherwise you can aggregate either by property or by page, depending on how you want your data calculated; see  the help documentation to learn how data is calculated differently by site versus by page.  Note: If you group or filter by page, you cannot aggregate by property.  If you specify any value other than AUTO, the aggregation type in the result will match the requested type, or if you request an invalid type, you will get an error. The API will never change your aggregation type if the requested type is invalid. Defaults to: `null`.
  - dimensionFilterGroups ([ApiDimensionFilterGroup]): [Optional] Zero or more filters to apply to the dimension grouping values; for example, &#39;query contains \&quot;buy\&quot;&#39; to see only data where the query string contains the substring \&quot;buy\&quot; (not case-sensitive). You can filter by a dimension without grouping by it. Defaults to: `null`.
  - dimensions ([String.t]): [Optional] Zero or more dimensions to group results by. Dimensions are the group-by values in the Search Analytics page. Dimensions are combined to create a unique row key for each row. Results are grouped in the order that you supply these dimensions. Defaults to: `null`.
  - endDate (String.t): [Required] End date of the requested date range, in YYYY-MM-DD format, in PST (UTC - 8:00). Must be greater than or equal to the start date. This value is included in the range. Defaults to: `null`.
  - rowLimit (integer()): [Optional; Default is 1000] The maximum number of rows to return. Must be a number from 1 to 5,000 (inclusive). Defaults to: `null`.
  - searchType (String.t): [Optional; Default is \&quot;web\&quot;] The search type to filter for. Defaults to: `null`.
  - startDate (String.t): [Required] Start date of the requested date range, in YYYY-MM-DD format, in PST time (UTC - 8:00). Must be less than or equal to the end date. This value is included in the range. Defaults to: `null`.
  - startRow (integer()): [Optional; Default is 0] Zero-based index of the first row in the response. Must be a non-negative number. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aggregationType => any(),
          :dimensionFilterGroups =>
            list(GoogleApi.Webmaster.V3.Model.ApiDimensionFilterGroup.t()),
          :dimensions => list(any()),
          :endDate => any(),
          :rowLimit => any(),
          :searchType => any(),
          :startDate => any(),
          :startRow => any()
        }

  field(:aggregationType)

  field(
    :dimensionFilterGroups,
    as: GoogleApi.Webmaster.V3.Model.ApiDimensionFilterGroup,
    type: :list
  )

  field(:dimensions, type: :list)
  field(:endDate)
  field(:rowLimit)
  field(:searchType)
  field(:startDate)
  field(:startRow)
end

defimpl Poison.Decoder, for: GoogleApi.Webmaster.V3.Model.SearchAnalyticsQueryRequest do
  def decode(value, options) do
    GoogleApi.Webmaster.V3.Model.SearchAnalyticsQueryRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Webmaster.V3.Model.SearchAnalyticsQueryRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
