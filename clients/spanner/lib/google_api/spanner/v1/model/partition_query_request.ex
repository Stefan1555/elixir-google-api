# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Spanner.V1.Model.PartitionQueryRequest do
  @moduledoc """
  The request for PartitionQuery

  ## Attributes

  - paramTypes (%{optional(String.t) &#x3D;&gt; Type}): It is not always possible for Cloud Spanner to infer the right SQL type from a JSON value.  For example, values of type &#x60;BYTES&#x60; and values of type &#x60;STRING&#x60; both appear in params as JSON strings.  In these cases, &#x60;param_types&#x60; can be used to specify the exact SQL type for some or all of the SQL query parameters. See the definition of Type for more information about SQL types. Defaults to: `null`.
  - params (%{optional(String.t) &#x3D;&gt; String.t}): The SQL query string can contain parameter placeholders. A parameter placeholder consists of &#x60;&#39;@&#39;&#x60; followed by the parameter name. Parameter names consist of any combination of letters, numbers, and underscores.  Parameters can appear anywhere that a literal value is expected.  The same parameter name can be used more than once, for example:   &#x60;\&quot;WHERE id &gt; @msg_id AND id &lt; @msg_id + 100\&quot;&#x60;  It is an error to execute an SQL query with unbound parameters.  Parameter values are specified using &#x60;params&#x60;, which is a JSON object whose keys are parameter names, and whose values are the corresponding parameter values. Defaults to: `null`.
  - partitionOptions (PartitionOptions): Additional options that affect how many partitions are created. Defaults to: `null`.
  - sql (String.t): The query request to generate partitions for. The request will fail if the query is not root partitionable. The query plan of a root partitionable query has a single distributed union operator. A distributed union operator conceptually divides one or more tables into multiple splits, remotely evaluates a subquery independently on each split, and then unions all results.  This must not contain DML commands, such as INSERT, UPDATE, or DELETE. Use ExecuteStreamingSql with a PartitionedDml transaction for large, partition-friendly DML operations. Defaults to: `null`.
  - transaction (TransactionSelector): Read only snapshot transactions are supported, read/write and single use transactions are not. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :paramTypes => map(),
          :params => map(),
          :partitionOptions => GoogleApi.Spanner.V1.Model.PartitionOptions.t(),
          :sql => any(),
          :transaction => GoogleApi.Spanner.V1.Model.TransactionSelector.t()
        }

  field(:paramTypes, as: GoogleApi.Spanner.V1.Model.Type, type: :map)
  field(:params, type: :map)
  field(:partitionOptions, as: GoogleApi.Spanner.V1.Model.PartitionOptions)
  field(:sql)
  field(:transaction, as: GoogleApi.Spanner.V1.Model.TransactionSelector)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.PartitionQueryRequest do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.PartitionQueryRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.PartitionQueryRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
