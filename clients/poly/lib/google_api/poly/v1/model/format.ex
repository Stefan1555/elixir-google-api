# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Poly.V1.Model.Format do
  @moduledoc """
  The same asset can be represented in different formats, for example, a [WaveFront .obj](//en.wikipedia.org/wiki/Wavefront_.obj_file) file with its corresponding .mtl file or a [Khronos glTF](//www.khronos.org/gltf) file with its corresponding .glb binary data. A format refers to a specific representation of an asset and contains all information needed to retrieve and describe this representation.

  ## Attributes

  - formatComplexity (FormatComplexity): Complexity stats about this representation of the asset. Defaults to: `null`.
  - formatType (String.t): A short string that identifies the format type of this representation. Possible values are: &#x60;FBX&#x60;, &#x60;GLTF&#x60;, &#x60;GLTF2&#x60;, &#x60;OBJ&#x60;, and &#x60;TILT&#x60;. Defaults to: `null`.
  - resources ([File]): A list of dependencies of the root element. May include, but is not limited to, materials, textures, and shader programs. Defaults to: `null`.
  - root (File): The root of the file hierarchy. This will always be populated. For some format_types - such as &#x60;TILT&#x60;, which are self-contained - this is all of the data.  Other types - such as &#x60;OBJ&#x60; - often reference other data elements. These are contained in the resources field. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :formatComplexity => GoogleApi.Poly.V1.Model.FormatComplexity.t(),
          :formatType => any(),
          :resources => list(GoogleApi.Poly.V1.Model.File.t()),
          :root => GoogleApi.Poly.V1.Model.File.t()
        }

  field(:formatComplexity, as: GoogleApi.Poly.V1.Model.FormatComplexity)
  field(:formatType)
  field(:resources, as: GoogleApi.Poly.V1.Model.File, type: :list)
  field(:root, as: GoogleApi.Poly.V1.Model.File)
end

defimpl Poison.Decoder, for: GoogleApi.Poly.V1.Model.Format do
  def decode(value, options) do
    GoogleApi.Poly.V1.Model.Format.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Poly.V1.Model.Format do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
