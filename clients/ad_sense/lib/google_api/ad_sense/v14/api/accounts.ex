# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdSense.V14.Api.Accounts do
  @moduledoc """
  API calls for all endpoints tagged `Accounts`.
  """

  alias GoogleApi.AdSense.V14.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Get Auto ad code for a given ad client.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account which contains the ad client.
  - ad_client_id (String.t): Ad client to get the code for.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdCode{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_adclients_get_ad_code(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdSense.V14.Model.AdCode.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_adclients_get_ad_code(
        connection,
        account_id,
        ad_client_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/adclients/{adClientId}/adcode", %{
        "accountId" => URI.encode_www_form(account_id),
        "adClientId" => URI.encode_www_form(ad_client_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdCode{}])
  end

  @doc """
  List all ad clients in the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account for which to list ad clients.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :maxResults (integer()): The maximum number of ad clients to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdClients{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_adclients_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.AdClients.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_adclients_list(connection, account_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/adclients", %{
        "accountId" => URI.encode_www_form(account_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdClients{}])
  end

  @doc """
  List all custom channels which the specified ad unit belongs to.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the ad client belongs.
  - ad_client_id (String.t): Ad client which contains the ad unit.
  - ad_unit_id (String.t): Ad unit for which to list custom channels.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :maxResults (integer()): The maximum number of custom channels to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.CustomChannels{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_adunits_customchannels_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdSense.V14.Model.CustomChannels.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_adunits_customchannels_list(
        connection,
        account_id,
        ad_client_id,
        ad_unit_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels",
        %{
          "accountId" => URI.encode_www_form(account_id),
          "adClientId" => URI.encode_www_form(ad_client_id),
          "adUnitId" => URI.encode_www_form(ad_unit_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.CustomChannels{}])
  end

  @doc """
  Gets the specified ad unit in the specified ad client for the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the ad client belongs.
  - ad_client_id (String.t): Ad client for which to get the ad unit.
  - ad_unit_id (String.t): Ad unit to retrieve.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdUnit{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_adunits_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdSense.V14.Model.AdUnit.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_adunits_get(
        connection,
        account_id,
        ad_client_id,
        ad_unit_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}", %{
        "accountId" => URI.encode_www_form(account_id),
        "adClientId" => URI.encode_www_form(ad_client_id),
        "adUnitId" => URI.encode_www_form(ad_unit_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdUnit{}])
  end

  @doc """
  Get ad code for the specified ad unit.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account which contains the ad client.
  - ad_client_id (String.t): Ad client with contains the ad unit.
  - ad_unit_id (String.t): Ad unit to get the code for.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdCode{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_adunits_get_ad_code(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdSense.V14.Model.AdCode.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_adunits_get_ad_code(
        connection,
        account_id,
        ad_client_id,
        ad_unit_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode", %{
        "accountId" => URI.encode_www_form(account_id),
        "adClientId" => URI.encode_www_form(ad_client_id),
        "adUnitId" => URI.encode_www_form(ad_unit_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdCode{}])
  end

  @doc """
  List all ad units in the specified ad client for the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the ad client belongs.
  - ad_client_id (String.t): Ad client for which to list ad units.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :includeInactive (boolean()): Whether to include inactive ad units. Default: true.
    - :maxResults (integer()): The maximum number of ad units to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdUnits{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_adunits_list(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.AdUnits.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_adunits_list(
        connection,
        account_id,
        ad_client_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :includeInactive => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/adclients/{adClientId}/adunits", %{
        "accountId" => URI.encode_www_form(account_id),
        "adClientId" => URI.encode_www_form(ad_client_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdUnits{}])
  end

  @doc """
  Dismiss (delete) the specified alert from the specified publisher AdSense account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account which contains the ad unit.
  - alert_id (String.t): Alert to delete.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_alerts_delete(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def adsense_accounts_alerts_delete(
        connection,
        account_id,
        alert_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url("/accounts/{accountId}/alerts/{alertId}", %{
        "accountId" => URI.encode_www_form(account_id),
        "alertId" => URI.encode_www_form(alert_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  List the alerts for the specified AdSense account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account for which to retrieve the alerts.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :locale (String.t): The locale to use for translating alert messages. The account locale will be used if this is not supplied. The AdSense default (English) will be used if the supplied locale is invalid or unsupported.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.Alerts{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_alerts_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.Alerts.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_alerts_list(connection, account_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :locale => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/alerts", %{
        "accountId" => URI.encode_www_form(account_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.Alerts{}])
  end

  @doc """
  List all ad units in the specified custom channel.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the ad client belongs.
  - ad_client_id (String.t): Ad client which contains the custom channel.
  - custom_channel_id (String.t): Custom channel for which to list ad units.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :includeInactive (boolean()): Whether to include inactive ad units. Default: true.
    - :maxResults (integer()): The maximum number of ad units to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdUnits{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_customchannels_adunits_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdSense.V14.Model.AdUnits.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_customchannels_adunits_list(
        connection,
        account_id,
        ad_client_id,
        custom_channel_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :includeInactive => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits",
        %{
          "accountId" => URI.encode_www_form(account_id),
          "adClientId" => URI.encode_www_form(ad_client_id),
          "customChannelId" => URI.encode_www_form(custom_channel_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdUnits{}])
  end

  @doc """
  Get the specified custom channel from the specified ad client for the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the ad client belongs.
  - ad_client_id (String.t): Ad client which contains the custom channel.
  - custom_channel_id (String.t): Custom channel to retrieve.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.CustomChannel{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_customchannels_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdSense.V14.Model.CustomChannel.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_customchannels_get(
        connection,
        account_id,
        ad_client_id,
        custom_channel_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}",
        %{
          "accountId" => URI.encode_www_form(account_id),
          "adClientId" => URI.encode_www_form(ad_client_id),
          "customChannelId" => URI.encode_www_form(custom_channel_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.CustomChannel{}])
  end

  @doc """
  List all custom channels in the specified ad client for the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the ad client belongs.
  - ad_client_id (String.t): Ad client for which to list custom channels.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :maxResults (integer()): The maximum number of custom channels to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.CustomChannels{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_customchannels_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdSense.V14.Model.CustomChannels.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_customchannels_list(
        connection,
        account_id,
        ad_client_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/adclients/{adClientId}/customchannels", %{
        "accountId" => URI.encode_www_form(account_id),
        "adClientId" => URI.encode_www_form(ad_client_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.CustomChannels{}])
  end

  @doc """
  Get information about the selected AdSense account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to get information about.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :tree (boolean()): Whether the tree of sub accounts should be returned.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.Account{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.Account.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_get(connection, account_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :tree => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}", %{
        "accountId" => URI.encode_www_form(account_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.Account{}])
  end

  @doc """
  List all accounts available to this AdSense account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :maxResults (integer()): The maximum number of accounts to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through accounts. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.Accounts{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_list(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.Accounts.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_list(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.Accounts{}])
  end

  @doc """
  List the payments for the specified AdSense account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account for which to retrieve the payments.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.Payments{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_payments_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.Payments.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_payments_list(connection, account_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/payments", %{
        "accountId" => URI.encode_www_form(account_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.Payments{}])
  end

  @doc """
  Generate an AdSense report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify \&quot;alt&#x3D;csv\&quot; as a query parameter.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account upon which to report.
  - start_date (String.t): Start of the date range to report on in \&quot;YYYY-MM-DD\&quot; format, inclusive.
  - end_date (String.t): End of the date range to report on in \&quot;YYYY-MM-DD\&quot; format, inclusive.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :currency (String.t): Optional currency to use when reporting on monetary metrics. Defaults to the account&#39;s currency if not set.
    - :dimension ([String.t]): Dimensions to base the report on.
    - :filter ([String.t]): Filters to be run on the report.
    - :locale (String.t): Optional locale to use for translating report output to a local language. Defaults to \&quot;en_US\&quot; if not specified.
    - :maxResults (integer()): The maximum number of rows of report data to return.
    - :metric ([String.t]): Numeric columns to include in the report.
    - :sort ([String.t]): The name of a dimension or metric to sort the resulting report on, optionally prefixed with \&quot;+\&quot; to sort ascending or \&quot;-\&quot; to sort descending. If no prefix is specified, the column is sorted ascending.
    - :startIndex (integer()): Index of the first row of report data to return.
    - :useTimezoneReporting (boolean()): Whether the report should be generated in the AdSense account&#39;s local timezone. If false default PST/PDT timezone will be used.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdsenseReportsGenerateResponse{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_reports_generate(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdSense.V14.Model.AdsenseReportsGenerateResponse.t()}
          | {:error, Tesla.Env.t()}
  def adsense_accounts_reports_generate(
        connection,
        account_id,
        start_date,
        end_date,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :currency => :query,
      :dimension => :query,
      :filter => :query,
      :locale => :query,
      :maxResults => :query,
      :metric => :query,
      :sort => :query,
      :startIndex => :query,
      :useTimezoneReporting => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/reports", %{
        "accountId" => URI.encode_www_form(account_id)
      })
      |> Request.add_param(:query, :startDate, start_date)
      |> Request.add_param(:query, :endDate, end_date)
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdsenseReportsGenerateResponse{}]
    )
  end

  @doc """
  Generate an AdSense report based on the saved report ID sent in the query parameters.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the saved reports belong.
  - saved_report_id (String.t): The saved report to retrieve.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :locale (String.t): Optional locale to use for translating report output to a local language. Defaults to \&quot;en_US\&quot; if not specified.
    - :maxResults (integer()): The maximum number of rows of report data to return.
    - :startIndex (integer()): Index of the first row of report data to return.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.AdsenseReportsGenerateResponse{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_reports_saved_generate(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdSense.V14.Model.AdsenseReportsGenerateResponse.t()}
          | {:error, Tesla.Env.t()}
  def adsense_accounts_reports_saved_generate(
        connection,
        account_id,
        saved_report_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :locale => :query,
      :maxResults => :query,
      :startIndex => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/reports/{savedReportId}", %{
        "accountId" => URI.encode_www_form(account_id),
        "savedReportId" => URI.encode_www_form(saved_report_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.AdSense.V14.Model.AdsenseReportsGenerateResponse{}]
    )
  end

  @doc """
  List all saved reports in the specified AdSense account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the saved reports belong.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :maxResults (integer()): The maximum number of saved reports to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through saved reports. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.SavedReports{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_reports_saved_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.SavedReports.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_reports_saved_list(
        connection,
        account_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/reports/saved", %{
        "accountId" => URI.encode_www_form(account_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.SavedReports{}])
  end

  @doc """
  List a specific saved ad style for the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account for which to get the saved ad style.
  - saved_ad_style_id (String.t): Saved ad style to retrieve.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.SavedAdStyle{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_savedadstyles_get(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.SavedAdStyle.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_savedadstyles_get(
        connection,
        account_id,
        saved_ad_style_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/savedadstyles/{savedAdStyleId}", %{
        "accountId" => URI.encode_www_form(account_id),
        "savedAdStyleId" => URI.encode_www_form(saved_ad_style_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.SavedAdStyle{}])
  end

  @doc """
  List all saved ad styles in the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account for which to list saved ad styles.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :maxResults (integer()): The maximum number of saved ad styles to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through saved ad styles. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.SavedAdStyles{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_savedadstyles_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.SavedAdStyles.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_savedadstyles_list(
        connection,
        account_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/savedadstyles", %{
        "accountId" => URI.encode_www_form(account_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.SavedAdStyles{}])
  end

  @doc """
  List all URL channels in the specified ad client for the specified account.

  ## Parameters

  - connection (GoogleApi.AdSense.V14.Connection): Connection to server
  - account_id (String.t): Account to which the ad client belongs.
  - ad_client_id (String.t): Ad client for which to list URL channels.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :maxResults (integer()): The maximum number of URL channels to include in the response, used for paging.
    - :pageToken (String.t): A continuation token, used to page through URL channels. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response.

  ## Returns

  {:ok, %GoogleApi.AdSense.V14.Model.UrlChannels{}} on success
  {:error, info} on failure
  """
  @spec adsense_accounts_urlchannels_list(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdSense.V14.Model.UrlChannels.t()} | {:error, Tesla.Env.t()}
  def adsense_accounts_urlchannels_list(
        connection,
        account_id,
        ad_client_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :maxResults => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/accounts/{accountId}/adclients/{adClientId}/urlchannels", %{
        "accountId" => URI.encode_www_form(account_id),
        "adClientId" => URI.encode_www_form(ad_client_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.AdSense.V14.Model.UrlChannels{}])
  end
end
