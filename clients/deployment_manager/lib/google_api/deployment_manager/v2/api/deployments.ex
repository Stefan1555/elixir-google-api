# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DeploymentManager.V2.Api.Deployments do
  @moduledoc """
  API calls for all endpoints tagged `Deployments`.
  """

  alias GoogleApi.DeploymentManager.V2.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Cancels and removes the preview currently associated with the deployment.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - deployment (String.t): The name of the deployment for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (DeploymentsCancelPreviewRequest): 

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_cancel_preview(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.DeploymentManager.V2.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_cancel_preview(
        connection,
        project,
        deployment,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{project}/global/deployments/{deployment}/cancelPreview", %{
        "project" => URI.encode_www_form(project),
        "deployment" => URI.encode_www_form(deployment)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Operation{}])
  end

  @doc """
  Deletes a deployment and all of the resources in the deployment.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - deployment (String.t): The name of the deployment for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :deletePolicy (String.t): Sets the policy to use for deleting resources.

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_delete(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.DeploymentManager.V2.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_delete(
        connection,
        project,
        deployment,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :deletePolicy => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url("/{project}/global/deployments/{deployment}", %{
        "project" => URI.encode_www_form(project),
        "deployment" => URI.encode_www_form(deployment)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Operation{}])
  end

  @doc """
  Gets information about a specific deployment.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - deployment (String.t): The name of the deployment for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Deployment{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_get(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.DeploymentManager.V2.Model.Deployment.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_get(
        connection,
        project,
        deployment,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{project}/global/deployments/{deployment}", %{
        "project" => URI.encode_www_form(project),
        "deployment" => URI.encode_www_form(deployment)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Deployment{}])
  end

  @doc """
  Gets the access control policy for a resource. May be empty if no such policy or resource exists.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): Project ID for this request.
  - resource (String.t): Name of the resource for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_get_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.DeploymentManager.V2.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_get_iam_policy(
        connection,
        project,
        resource,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{project}/global/deployments/{resource}/getIamPolicy", %{
        "project" => URI.encode_www_form(project),
        "resource" => URI.encode_www_form(resource)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Policy{}])
  end

  @doc """
  Creates a deployment and all of the resources described by the deployment manifest.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :createPolicy (String.t): Sets the policy to use for creating new resources.
    - :preview (boolean()): If set to true, creates a deployment and creates \&quot;shell\&quot; resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. After previewing a deployment, you can deploy your resources by making a request with the update() method or you can use the cancelPreview() method to cancel the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
    - :body (Deployment): 

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_insert(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.DeploymentManager.V2.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_insert(connection, project, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :createPolicy => :query,
      :preview => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{project}/global/deployments", %{
        "project" => URI.encode_www_form(project)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Operation{}])
  end

  @doc """
  Lists all deployments for a given project.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :filter (String.t): A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either &#x3D;, !&#x3D;, &gt;, or &lt;.  For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name !&#x3D; example-instance.  You can also filter nested fields. For example, you could specify scheduling.automaticRestart &#x3D; false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.  To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart &#x3D; true) (cpuPlatform &#x3D; \&quot;Intel Skylake\&quot;). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform &#x3D; \&quot;Intel Skylake\&quot;) OR (cpuPlatform &#x3D; \&quot;Intel Broadwell\&quot;) AND (scheduling.automaticRestart &#x3D; true).
    - :maxResults (integer()): The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    - :orderBy (String.t): Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.  You can also sort results in descending order based on the creation timestamp using orderBy&#x3D;\&quot;creationTimestamp desc\&quot;. This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.  Currently, only sorting by name or creationTimestamp desc is supported.
    - :pageToken (String.t): Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.DeploymentsListResponse{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.DeploymentManager.V2.Model.DeploymentsListResponse.t()}
          | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_list(connection, project, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :filter => :query,
      :maxResults => :query,
      :orderBy => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/{project}/global/deployments", %{
        "project" => URI.encode_www_form(project)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.DeploymentsListResponse{}]
    )
  end

  @doc """
  Updates a deployment and all of the resources described by the deployment manifest. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - deployment (String.t): The name of the deployment for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :createPolicy (String.t): Sets the policy to use for creating new resources.
    - :deletePolicy (String.t): Sets the policy to use for deleting resources.
    - :preview (boolean()): If set to true, updates the deployment and creates and updates the \&quot;shell\&quot; resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a target.config with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the update() or you can cancelPreview() to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
    - :body (Deployment): 

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_patch(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.DeploymentManager.V2.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_patch(
        connection,
        project,
        deployment,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :createPolicy => :query,
      :deletePolicy => :query,
      :preview => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url("/{project}/global/deployments/{deployment}", %{
        "project" => URI.encode_www_form(project),
        "deployment" => URI.encode_www_form(deployment)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Operation{}])
  end

  @doc """
  Sets the access control policy on the specified resource. Replaces any existing policy.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): Project ID for this request.
  - resource (String.t): Name of the resource for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (GlobalSetPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_set_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.DeploymentManager.V2.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_set_iam_policy(
        connection,
        project,
        resource,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{project}/global/deployments/{resource}/setIamPolicy", %{
        "project" => URI.encode_www_form(project),
        "resource" => URI.encode_www_form(resource)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Policy{}])
  end

  @doc """
  Stops an ongoing operation. This does not roll back any work that has already been completed, but prevents any new work from being started.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - deployment (String.t): The name of the deployment for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (DeploymentsStopRequest): 

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_stop(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.DeploymentManager.V2.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_stop(
        connection,
        project,
        deployment,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{project}/global/deployments/{deployment}/stop", %{
        "project" => URI.encode_www_form(project),
        "deployment" => URI.encode_www_form(deployment)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Operation{}])
  end

  @doc """
  Returns permissions that a caller has on the specified resource.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): Project ID for this request.
  - resource (String.t): Name of the resource for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (TestPermissionsRequest): 

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.TestPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_test_iam_permissions(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.DeploymentManager.V2.Model.TestPermissionsResponse.t()}
          | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_test_iam_permissions(
        connection,
        project,
        resource,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/{project}/global/deployments/{resource}/testIamPermissions", %{
        "project" => URI.encode_www_form(project),
        "resource" => URI.encode_www_form(resource)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.TestPermissionsResponse{}]
    )
  end

  @doc """
  Updates a deployment and all of the resources described by the deployment manifest.

  ## Parameters

  - connection (GoogleApi.DeploymentManager.V2.Connection): Connection to server
  - project (String.t): The project ID for this request.
  - deployment (String.t): The name of the deployment for this request.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :createPolicy (String.t): Sets the policy to use for creating new resources.
    - :deletePolicy (String.t): Sets the policy to use for deleting resources.
    - :preview (boolean()): If set to true, updates the deployment and creates and updates the \&quot;shell\&quot; resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a target.config with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the update() or you can cancelPreview() to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
    - :body (Deployment): 

  ## Returns

  {:ok, %GoogleApi.DeploymentManager.V2.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec deploymentmanager_deployments_update(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.DeploymentManager.V2.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def deploymentmanager_deployments_update(
        connection,
        project,
        deployment,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :createPolicy => :query,
      :deletePolicy => :query,
      :preview => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:put)
      |> Request.url("/{project}/global/deployments/{deployment}", %{
        "project" => URI.encode_www_form(project),
        "deployment" => URI.encode_www_form(deployment)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DeploymentManager.V2.Model.Operation{}])
  end
end
