# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.FirebaseDynamicLinks.V1.Model.DynamicLinkInfo do
  @moduledoc """
  Information about a Dynamic Link.

  ## Attributes

  - analyticsInfo (AnalyticsInfo): Parameters used for tracking. See all tracking parameters in the [documentation](https://firebase.google.com/docs/dynamic-links/create-manually). Defaults to: `null`.
  - androidInfo (AndroidInfo): Android related information. See Android related parameters in the [documentation](https://firebase.google.com/docs/dynamic-links/create-manually). Defaults to: `null`.
  - desktopInfo (DesktopInfo): Desktop related information. See desktop related parameters in the [documentation](https://firebase.google.com/docs/dynamic-links/create-manually). Defaults to: `null`.
  - domainUriPrefix (String.t): E.g. https://maps.app.goo.gl, https://maps.page.link, https://g.co/maps More examples can be found in description of getNormalizedUriPrefix in j/c/g/firebase/dynamiclinks/uri/DdlDomain.java  Will fallback to dynamic_link_domain is this field is missing Defaults to: `null`.
  - dynamicLinkDomain (String.t): Dynamic Links domain that the project owns, e.g. abcd.app.goo.gl [Learn more](https://firebase.google.com/docs/dynamic-links/android/receive) on how to set up Dynamic Link domain associated with your Firebase project.  Required if missing domain_uri_prefix. Defaults to: `null`.
  - iosInfo (IosInfo): iOS related information. See iOS related parameters in the [documentation](https://firebase.google.com/docs/dynamic-links/create-manually). Defaults to: `null`.
  - link (String.t): The link your app will open, You can specify any URL your app can handle. This link must be a well-formatted URL, be properly URL-encoded, and use the HTTP or HTTPS scheme. See &#39;link&#39; parameters in the [documentation](https://firebase.google.com/docs/dynamic-links/create-manually).  Required. Defaults to: `null`.
  - navigationInfo (NavigationInfo): Information of navigation behavior of a Firebase Dynamic Links. Defaults to: `null`.
  - socialMetaTagInfo (SocialMetaTagInfo): Parameters for social meta tag params. Used to set meta tag data for link previews on social sites. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyticsInfo => GoogleApi.FirebaseDynamicLinks.V1.Model.AnalyticsInfo.t(),
          :androidInfo => GoogleApi.FirebaseDynamicLinks.V1.Model.AndroidInfo.t(),
          :desktopInfo => GoogleApi.FirebaseDynamicLinks.V1.Model.DesktopInfo.t(),
          :domainUriPrefix => any(),
          :dynamicLinkDomain => any(),
          :iosInfo => GoogleApi.FirebaseDynamicLinks.V1.Model.IosInfo.t(),
          :link => any(),
          :navigationInfo => GoogleApi.FirebaseDynamicLinks.V1.Model.NavigationInfo.t(),
          :socialMetaTagInfo => GoogleApi.FirebaseDynamicLinks.V1.Model.SocialMetaTagInfo.t()
        }

  field(:analyticsInfo, as: GoogleApi.FirebaseDynamicLinks.V1.Model.AnalyticsInfo)
  field(:androidInfo, as: GoogleApi.FirebaseDynamicLinks.V1.Model.AndroidInfo)
  field(:desktopInfo, as: GoogleApi.FirebaseDynamicLinks.V1.Model.DesktopInfo)
  field(:domainUriPrefix)
  field(:dynamicLinkDomain)
  field(:iosInfo, as: GoogleApi.FirebaseDynamicLinks.V1.Model.IosInfo)
  field(:link)
  field(:navigationInfo, as: GoogleApi.FirebaseDynamicLinks.V1.Model.NavigationInfo)
  field(:socialMetaTagInfo, as: GoogleApi.FirebaseDynamicLinks.V1.Model.SocialMetaTagInfo)
end

defimpl Poison.Decoder, for: GoogleApi.FirebaseDynamicLinks.V1.Model.DynamicLinkInfo do
  def decode(value, options) do
    GoogleApi.FirebaseDynamicLinks.V1.Model.DynamicLinkInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FirebaseDynamicLinks.V1.Model.DynamicLinkInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
