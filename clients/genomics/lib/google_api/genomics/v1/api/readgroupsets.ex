# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Genomics.V1.Api.Readgroupsets do
  @moduledoc """
  API calls for all endpoints tagged `Readgroupsets`.
  """

  alias GoogleApi.Genomics.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Lists fixed width coverage buckets for a read group set, each of which correspond to a range of a reference sequence. Each bucket summarizes coverage information across its corresponding genomic range.  Coverage is defined as the number of reads which are aligned to a given base in the reference sequence. Coverage buckets are available at several precomputed bucket widths, enabling retrieval of various coverage &#39;zoom levels&#39;. The caller must have READ permissions for the target read group set.

  ## Parameters

  - connection (GoogleApi.Genomics.V1.Connection): Connection to server
  - read_group_set_id (String.t): Required. The ID of the read group set over which coverage is requested.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :end (String.t): The end position of the range on the reference, 0-based exclusive. If specified, &#x60;referenceName&#x60; must also be specified. If unset or 0, defaults to the length of the reference.
    - :pageSize (integer()): The maximum number of results to return in a single page. If unspecified, defaults to 1024. The maximum value is 2048.
    - :pageToken (String.t): The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of &#x60;nextPageToken&#x60; from the previous response.
    - :referenceName (String.t): The name of the reference to query, within the reference set associated with this query. Optional.
    - :start (String.t): The start position of the range on the reference, 0-based inclusive. If specified, &#x60;referenceName&#x60; must also be specified. Defaults to 0.
    - :targetBucketWidth (String.t): The desired width of each reported coverage bucket in base pairs. This will be rounded down to the nearest precomputed bucket width; the value of which is returned as &#x60;bucketWidth&#x60; in the response. Defaults to infinity (each bucket spans an entire reference sequence) or the length of the target range, if specified. The smallest precomputed &#x60;bucketWidth&#x60; is currently 2048 base pairs; this is subject to change.

  ## Returns

  {:ok, %GoogleApi.Genomics.V1.Model.ListCoverageBucketsResponse{}} on success
  {:error, info} on failure
  """
  @spec genomics_readgroupsets_coveragebuckets_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Genomics.V1.Model.ListCoverageBucketsResponse.t()}
          | {:error, Tesla.Env.t()}
  def genomics_readgroupsets_coveragebuckets_list(
        connection,
        read_group_set_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :end => :query,
      :pageSize => :query,
      :pageToken => :query,
      :referenceName => :query,
      :start => :query,
      :targetBucketWidth => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/readgroupsets/{readGroupSetId}/coveragebuckets", %{
        "readGroupSetId" => URI.encode_www_form(read_group_set_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.Genomics.V1.Model.ListCoverageBucketsResponse{}]
    )
  end

  @doc """
  Deletes a read group set.

  ## Parameters

  - connection (GoogleApi.Genomics.V1.Connection): Connection to server
  - read_group_set_id (String.t): The ID of the read group set to be deleted. The caller must have WRITE permissions to the dataset associated with this read group set.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.Genomics.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec genomics_readgroupsets_delete(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Genomics.V1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def genomics_readgroupsets_delete(
        connection,
        read_group_set_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:delete)
      |> Request.url("/v1/readgroupsets/{readGroupSetId}", %{
        "readGroupSetId" => URI.encode_www_form(read_group_set_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Genomics.V1.Model.Empty{}])
  end

  @doc """
  Exports a read group set to a BAM file in Google Cloud Storage.  Note that currently there may be some differences between exported BAM files and the original BAM file at the time of import. See ImportReadGroupSets for caveats.

  ## Parameters

  - connection (GoogleApi.Genomics.V1.Connection): Connection to server
  - read_group_set_id (String.t): Required. The ID of the read group set to export. The caller must have READ access to this read group set.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (ExportReadGroupSetRequest): 

  ## Returns

  {:ok, %GoogleApi.Genomics.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec genomics_readgroupsets_export(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Genomics.V1.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def genomics_readgroupsets_export(
        connection,
        read_group_set_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/readgroupsets/{readGroupSetId}:export", %{
        "readGroupSetId" => URI.encode_www_form(read_group_set_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Genomics.V1.Model.Operation{}])
  end

  @doc """
  Gets a read group set by ID.

  ## Parameters

  - connection (GoogleApi.Genomics.V1.Connection): Connection to server
  - read_group_set_id (String.t): The ID of the read group set.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.Genomics.V1.Model.ReadGroupSet{}} on success
  {:error, info} on failure
  """
  @spec genomics_readgroupsets_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Genomics.V1.Model.ReadGroupSet.t()} | {:error, Tesla.Env.t()}
  def genomics_readgroupsets_get(connection, read_group_set_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/readgroupsets/{readGroupSetId}", %{
        "readGroupSetId" => URI.encode_www_form(read_group_set_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Genomics.V1.Model.ReadGroupSet{}])
  end

  @doc """
  Creates read group sets by asynchronously importing the provided information.  The caller must have WRITE permissions to the dataset.  ## Notes on [BAM](https://samtools.github.io/hts-specs/SAMv1.pdf) import  - Tags will be converted to strings - tag types are not preserved - Comments (&#x60;@CO&#x60;) in the input file header will not be preserved - Original header order of references (&#x60;@SQ&#x60;) will not be preserved - Any reverse stranded unmapped reads will be reverse complemented, and their qualities (also the \&quot;BQ\&quot; and \&quot;OQ\&quot; tags, if any) will be reversed - Unmapped reads will be stripped of positional information (reference name and position)

  ## Parameters

  - connection (GoogleApi.Genomics.V1.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (ImportReadGroupSetsRequest): 

  ## Returns

  {:ok, %GoogleApi.Genomics.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec genomics_readgroupsets_import(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.Genomics.V1.Model.Operation.t()} | {:error, Tesla.Env.t()}
  def genomics_readgroupsets_import(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/readgroupsets:import")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Genomics.V1.Model.Operation{}])
  end

  @doc """
  Updates a read group set.  This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.Genomics.V1.Connection): Connection to server
  - read_group_set_id (String.t): The ID of the read group set to be updated. The caller must have WRITE permissions to the dataset associated with this read group set.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :updateMask (String.t): An optional mask specifying which fields to update. Supported fields:  * name. * referenceSetId.  Leaving &#x60;updateMask&#x60; unset is equivalent to specifying all mutable fields.
    - :body (ReadGroupSet): 

  ## Returns

  {:ok, %GoogleApi.Genomics.V1.Model.ReadGroupSet{}} on success
  {:error, info} on failure
  """
  @spec genomics_readgroupsets_patch(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Genomics.V1.Model.ReadGroupSet.t()} | {:error, Tesla.Env.t()}
  def genomics_readgroupsets_patch(
        connection,
        read_group_set_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :updateMask => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url("/v1/readgroupsets/{readGroupSetId}", %{
        "readGroupSetId" => URI.encode_www_form(read_group_set_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Genomics.V1.Model.ReadGroupSet{}])
  end

  @doc """
  Searches for read group sets matching the criteria.  Implements [GlobalAllianceApi.searchReadGroupSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L135).

  ## Parameters

  - connection (GoogleApi.Genomics.V1.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (SearchReadGroupSetsRequest): 

  ## Returns

  {:ok, %GoogleApi.Genomics.V1.Model.SearchReadGroupSetsResponse{}} on success
  {:error, info} on failure
  """
  @spec genomics_readgroupsets_search(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.Genomics.V1.Model.SearchReadGroupSetsResponse.t()}
          | {:error, Tesla.Env.t()}
  def genomics_readgroupsets_search(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/readgroupsets/search")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.Genomics.V1.Model.SearchReadGroupSetsResponse{}]
    )
  end
end
