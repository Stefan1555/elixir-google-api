# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Genomics.V1.Model.DelayedEvent do
  @moduledoc """
  An event generated whenever a resource limitation or transient error delays execution of a pipeline that was otherwise ready to run.

  ## Attributes

  - cause (String.t): A textual description of the cause of the delay. The string can change without notice because it is often generated by another service (such as Compute Engine). Defaults to: `null`.
  - metrics ([String.t]): If the delay was caused by a resource shortage, this field lists the Compute Engine metrics that are preventing this operation from running (for example, &#x60;CPUS&#x60; or &#x60;INSTANCES&#x60;). If the particular metric is not known, a single &#x60;UNKNOWN&#x60; metric will be present. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cause => any(),
          :metrics => list(any())
        }

  field(:cause)
  field(:metrics, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Genomics.V1.Model.DelayedEvent do
  def decode(value, options) do
    GoogleApi.Genomics.V1.Model.DelayedEvent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Genomics.V1.Model.DelayedEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
