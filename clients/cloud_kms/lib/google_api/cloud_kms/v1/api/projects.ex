# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudKMS.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.CloudKMS.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Gets information about a location.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. Resource name for the location.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.Location{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_get(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.Location.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_get(
        connection,
        projects_id,
        locations_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/projects/{projectsId}/locations/{locationsId}", %{
        "projectsId" => URI.encode_www_form(projects_id),
        "locationsId" => URI.encode_www_form(locations_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.Location{}])
  end

  @doc """
  Create a new KeyRing in a given Project and Location.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;parent&#x60;. Required. The resource name of the location associated with the KeyRings, in the format &#x60;projects/*/locations/*&#x60;.
  - locations_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :keyRingId (String.t): Required. It must be unique within a location and match the regular expression &#x60;[a-zA-Z0-9_-]{1,63}&#x60;
    - :body (KeyRing): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.KeyRing{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_create(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.KeyRing.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_create(
        connection,
        projects_id,
        locations_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :keyRingId => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v1/projects/{projectsId}/locations/{locationsId}/keyRings", %{
        "projectsId" => URI.encode_www_form(projects_id),
        "locationsId" => URI.encode_www_form(locations_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.KeyRing{}])
  end

  @doc """
  Create a new CryptoKey within a KeyRing.  CryptoKey.purpose and CryptoKey.version_template.algorithm are required.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;parent&#x60;. Required. The name of the KeyRing associated with the CryptoKeys.
  - locations_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :cryptoKeyId (String.t): Required. It must be unique within a KeyRing and match the regular expression &#x60;[a-zA-Z0-9_-]{1,63}&#x60;
    - :body (CryptoKey): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKey{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_create(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKey.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_create(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :cryptoKeyId => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKey{}])
  end

  @doc """
  Decrypts data that was encrypted with a public key retrieved from GetPublicKey corresponding to a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_DECRYPT.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. Required. The resource name of the CryptoKeyVersion to use for decryption.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_key_versions_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (AsymmetricDecryptRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.AsymmetricDecryptResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_asymmetric_decrypt(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.AsymmetricDecryptResponse.t()}
          | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_asymmetric_decrypt(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        crypto_key_versions_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:asymmetricDecrypt",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id),
          "cryptoKeyVersionsId" => URI.encode_www_form(crypto_key_versions_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.AsymmetricDecryptResponse{}])
  end

  @doc """
  Signs data using a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_SIGN, producing a signature that can be verified with the public key retrieved from GetPublicKey.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. Required. The resource name of the CryptoKeyVersion to use for signing.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_key_versions_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (AsymmetricSignRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.AsymmetricSignResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_asymmetric_sign(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.AsymmetricSignResponse.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_asymmetric_sign(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        crypto_key_versions_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:asymmetricSign",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id),
          "cryptoKeyVersionsId" => URI.encode_www_form(crypto_key_versions_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.AsymmetricSignResponse{}])
  end

  @doc """
  Create a new CryptoKeyVersion in a CryptoKey.  The server will assign the next sequential id. If unset, state will be set to ENABLED.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;parent&#x60;. Required. The name of the CryptoKey associated with the CryptoKeyVersions.
  - locations_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (CryptoKeyVersion): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_create(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_create(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}])
  end

  @doc """
  Schedule a CryptoKeyVersion for destruction.  Upon calling this method, CryptoKeyVersion.state will be set to DESTROY_SCHEDULED and destroy_time will be set to a time 24 hours in the future, at which point the state will be changed to DESTROYED, and the key material will be irrevocably destroyed.  Before the destroy_time is reached, RestoreCryptoKeyVersion may be called to reverse the process.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The resource name of the CryptoKeyVersion to destroy.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_key_versions_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (DestroyCryptoKeyVersionRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_destroy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_destroy(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        crypto_key_versions_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:destroy",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id),
          "cryptoKeyVersionsId" => URI.encode_www_form(crypto_key_versions_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}])
  end

  @doc """
  Returns metadata for a given CryptoKeyVersion.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The name of the CryptoKeyVersion to get.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_key_versions_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_get(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        crypto_key_versions_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id),
          "cryptoKeyVersionsId" => URI.encode_www_form(crypto_key_versions_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}])
  end

  @doc """
  Returns the public key for the given CryptoKeyVersion. The CryptoKey.purpose must be ASYMMETRIC_SIGN or ASYMMETRIC_DECRYPT.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The name of the CryptoKeyVersion public key to get.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_key_versions_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.PublicKey{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_get_public_key(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.PublicKey.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_get_public_key(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        crypto_key_versions_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}/publicKey",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id),
          "cryptoKeyVersionsId" => URI.encode_www_form(crypto_key_versions_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.PublicKey{}])
  end

  @doc """
  Lists CryptoKeyVersions.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;parent&#x60;. Required. The resource name of the CryptoKey to list, in the format &#x60;projects/*/locations/*/keyRings/*/cryptoKeys/*&#x60;.
  - locations_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Optional limit on the number of CryptoKeyVersions to include in the response. Further CryptoKeyVersions can subsequently be obtained by including the ListCryptoKeyVersionsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): Optional pagination token, returned earlier via ListCryptoKeyVersionsResponse.next_page_token.
    - :view (String.t): The fields to include in the response.

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.ListCryptoKeyVersionsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.ListCryptoKeyVersionsResponse.t()}
          | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_list(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query,
      :view => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.ListCryptoKeyVersionsResponse{}]
    )
  end

  @doc """
  Update a CryptoKeyVersion&#39;s metadata.  state may be changed between ENABLED and DISABLED using this method. See DestroyCryptoKeyVersion and RestoreCryptoKeyVersion to move between other states.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;cryptoKeyVersion.name&#x60;. Output only. The resource name for this CryptoKeyVersion in the format &#x60;projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*&#x60;.
  - locations_id (String.t): Part of &#x60;cryptoKeyVersion.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;cryptoKeyVersion.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;cryptoKeyVersion.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_key_versions_id (String.t): Part of &#x60;cryptoKeyVersion.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :updateMask (String.t): Required list of fields to be updated in this request.
    - :body (CryptoKeyVersion): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_patch(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_patch(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        crypto_key_versions_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :updateMask => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id),
          "cryptoKeyVersionsId" => URI.encode_www_form(crypto_key_versions_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}])
  end

  @doc """
  Restore a CryptoKeyVersion in the DESTROY_SCHEDULED state.  Upon restoration of the CryptoKeyVersion, state will be set to DISABLED, and destroy_time will be cleared.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The resource name of the CryptoKeyVersion to restore.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_key_versions_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (RestoreCryptoKeyVersionRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_restore(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_crypto_key_versions_restore(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        crypto_key_versions_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:restore",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id),
          "cryptoKeyVersionsId" => URI.encode_www_form(crypto_key_versions_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion{}])
  end

  @doc """
  Decrypts data that was protected by Encrypt. The CryptoKey.purpose must be ENCRYPT_DECRYPT.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. Required. The resource name of the CryptoKey to use for decryption. The server will choose the appropriate version.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (DecryptRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.DecryptResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_decrypt(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.DecryptResponse.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_decrypt(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:decrypt",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.DecryptResponse{}])
  end

  @doc """
  Encrypts data, so that it can only be recovered by a call to Decrypt. The CryptoKey.purpose must be ENCRYPT_DECRYPT.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. Required. The resource name of the CryptoKey or CryptoKeyVersion to use for encryption.  If a CryptoKey is specified, the server will use its primary version.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (EncryptRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.EncryptResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_encrypt(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.EncryptResponse.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_encrypt(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:encrypt",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.EncryptResponse{}])
  end

  @doc """
  Returns metadata for a given CryptoKey, as well as its primary CryptoKeyVersion.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The name of the CryptoKey to get.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKey{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKey.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_get(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKey{}])
  end

  @doc """
  Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_get_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_get_iam_policy(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:getIamPolicy",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.Policy{}])
  end

  @doc """
  Lists CryptoKeys.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;parent&#x60;. Required. The resource name of the KeyRing to list, in the format &#x60;projects/*/locations/*/keyRings/*&#x60;.
  - locations_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Optional limit on the number of CryptoKeys to include in the response.  Further CryptoKeys can subsequently be obtained by including the ListCryptoKeysResponse.next_page_token in a subsequent request.  If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): Optional pagination token, returned earlier via ListCryptoKeysResponse.next_page_token.
    - :versionView (String.t): The fields of the primary version to include in the response.

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.ListCryptoKeysResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.ListCryptoKeysResponse.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_list(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query,
      :versionView => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.ListCryptoKeysResponse{}])
  end

  @doc """
  Update a CryptoKey.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;cryptoKey.name&#x60;. Output only. The resource name for this CryptoKey in the format &#x60;projects/*/locations/*/keyRings/*/cryptoKeys/*&#x60;.
  - locations_id (String.t): Part of &#x60;cryptoKey.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;cryptoKey.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;cryptoKey.name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :updateMask (String.t): Required list of fields to be updated in this request.
    - :body (CryptoKey): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKey{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_patch(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKey.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_patch(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :updateMask => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKey{}])
  end

  @doc """
  Sets the access control policy on the specified resource. Replaces any existing policy.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (SetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_set_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_set_iam_policy(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:setIamPolicy",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.Policy{}])
  end

  @doc """
  Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.  Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \&quot;fail open\&quot; without warning.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (TestIamPermissionsRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_test_iam_permissions(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse.t()}
          | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_test_iam_permissions(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:testIamPermissions",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse{}]
    )
  end

  @doc """
  Update the version of a CryptoKey that will be used in Encrypt.  Returns an error if called on an asymmetric key.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The resource name of the CryptoKey to update.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - crypto_keys_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (UpdateCryptoKeyPrimaryVersionRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.CryptoKey{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_crypto_keys_update_primary_version(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.CryptoKey.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_crypto_keys_update_primary_version(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        crypto_keys_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:updatePrimaryVersion",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "cryptoKeysId" => URI.encode_www_form(crypto_keys_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.CryptoKey{}])
  end

  @doc """
  Returns metadata for a given KeyRing.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The name of the KeyRing to get.
  - locations_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.KeyRing{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.KeyRing.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_get(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}", %{
        "projectsId" => URI.encode_www_form(projects_id),
        "locationsId" => URI.encode_www_form(locations_id),
        "keyRingsId" => URI.encode_www_form(key_rings_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.KeyRing{}])
  end

  @doc """
  Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_get_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_get_iam_policy(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:getIamPolicy",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.Policy{}])
  end

  @doc """
  Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - import_jobs_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_import_jobs_get_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_import_jobs_get_iam_policy(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        import_jobs_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:getIamPolicy",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "importJobsId" => URI.encode_www_form(import_jobs_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.Policy{}])
  end

  @doc """
  Sets the access control policy on the specified resource. Replaces any existing policy.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - import_jobs_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (SetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_import_jobs_set_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_import_jobs_set_iam_policy(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        import_jobs_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:setIamPolicy",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "importJobsId" => URI.encode_www_form(import_jobs_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.Policy{}])
  end

  @doc """
  Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.  Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \&quot;fail open\&quot; without warning.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - import_jobs_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (TestIamPermissionsRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_import_jobs_test_iam_permissions(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse.t()}
          | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_import_jobs_test_iam_permissions(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        import_jobs_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:testIamPermissions",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id),
          "importJobsId" => URI.encode_www_form(import_jobs_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse{}]
    )
  end

  @doc """
  Lists KeyRings.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;parent&#x60;. Required. The resource name of the location associated with the KeyRings, in the format &#x60;projects/*/locations/*&#x60;.
  - locations_id (String.t): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :pageSize (integer()): Optional limit on the number of KeyRings to include in the response.  Further KeyRings can subsequently be obtained by including the ListKeyRingsResponse.next_page_token in a subsequent request.  If unspecified, the server will pick an appropriate default.
    - :pageToken (String.t): Optional pagination token, returned earlier via ListKeyRingsResponse.next_page_token.

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.ListKeyRingsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.ListKeyRingsResponse.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_list(
        connection,
        projects_id,
        locations_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/projects/{projectsId}/locations/{locationsId}/keyRings", %{
        "projectsId" => URI.encode_www_form(projects_id),
        "locationsId" => URI.encode_www_form(locations_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.ListKeyRingsResponse{}])
  end

  @doc """
  Sets the access control policy on the specified resource. Replaces any existing policy.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (SetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_set_iam_policy(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.CloudKMS.V1.Model.Policy.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_set_iam_policy(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:setIamPolicy",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.Policy{}])
  end

  @doc """
  Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.  Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \&quot;fail open\&quot; without warning.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;resource&#x60;. REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.
  - locations_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - key_rings_id (String.t): Part of &#x60;resource&#x60;. See documentation of &#x60;projectsId&#x60;.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :body (TestIamPermissionsRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_key_rings_test_iam_permissions(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse.t()}
          | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_key_rings_test_iam_permissions(
        connection,
        projects_id,
        locations_id,
        key_rings_id,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url(
        "/v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:testIamPermissions",
        %{
          "projectsId" => URI.encode_www_form(projects_id),
          "locationsId" => URI.encode_www_form(locations_id),
          "keyRingsId" => URI.encode_www_form(key_rings_id)
        }
      )
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.TestIamPermissionsResponse{}]
    )
  end

  @doc """
  Lists information about the supported locations for this service.

  ## Parameters

  - connection (GoogleApi.CloudKMS.V1.Connection): Connection to server
  - projects_id (String.t): Part of &#x60;name&#x60;. The resource that owns the locations collection, if applicable.
  - optional_params (KeywordList): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :filter (String.t): The standard list filter.
    - :pageSize (integer()): The standard list page size.
    - :pageToken (String.t): The standard list page token.

  ## Returns

  {:ok, %GoogleApi.CloudKMS.V1.Model.ListLocationsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudkms_projects_locations_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.CloudKMS.V1.Model.ListLocationsResponse.t()} | {:error, Tesla.Env.t()}
  def cloudkms_projects_locations_list(connection, projects_id, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :upload_protocol => :query,
      :uploadType => :query,
      :filter => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/projects/{projectsId}/locations", %{
        "projectsId" => URI.encode_www_form(projects_id)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.CloudKMS.V1.Model.ListLocationsResponse{}])
  end
end
