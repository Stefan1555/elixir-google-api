# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DoubleClickSearch.V2.Api.Conversion do
  @moduledoc """
  API calls for all endpoints tagged `Conversion`.
  """

  alias GoogleApi.DoubleClickSearch.V2.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Retrieves a list of conversions from a DoubleClick Search engine account.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - agency_id (String.t): Numeric ID of the agency.
  - advertiser_id (String.t): Numeric ID of the advertiser.
  - engine_account_id (String.t): Numeric ID of the engine account.
  - end_date (integer()): Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - row_count (integer()): The number of conversions to return per call.
  - start_date (integer()): First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - start_row (integer()): The 0-based starting index for retrieving conversions results.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :adGroupId (String.t): Numeric ID of the ad group.
    - :adId (String.t): Numeric ID of the ad.
    - :campaignId (String.t): Numeric ID of the campaign.
    - :criterionId (String.t): Numeric ID of the criterion.

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          integer(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t()} | {:error, Tesla.Env.t()}
  def doubleclicksearch_conversion_get(
        connection,
        agency_id,
        advertiser_id,
        engine_account_id,
        end_date,
        row_count,
        start_date,
        start_row,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :adGroupId => :query,
      :adId => :query,
      :campaignId => :query,
      :criterionId => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url(
        "/agency/{agencyId}/advertiser/{advertiserId}/engine/{engineAccountId}/conversion",
        %{
          "agencyId" => URI.encode_www_form(agency_id),
          "advertiserId" => URI.encode_www_form(advertiser_id),
          "engineAccountId" => URI.encode_www_form(engine_account_id)
        }
      )
      |> Request.add_param(:query, :endDate, end_date)
      |> Request.add_param(:query, :rowCount, row_count)
      |> Request.add_param(:query, :startDate, start_date)
      |> Request.add_param(:query, :startRow, start_row)
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}])
  end

  @doc """
  Inserts a batch of new conversions into DoubleClick Search.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (ConversionList): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_insert(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t()} | {:error, Tesla.Env.t()}
  def doubleclicksearch_conversion_insert(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/conversion")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}])
  end

  @doc """
  Updates a batch of conversions in DoubleClick Search. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - advertiser_id (String.t): Numeric ID of the advertiser.
  - agency_id (String.t): Numeric ID of the agency.
  - end_date (integer()): Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - engine_account_id (String.t): Numeric ID of the engine account.
  - row_count (integer()): The number of conversions to return per call.
  - start_date (integer()): First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
  - start_row (integer()): The 0-based starting index for retrieving conversions results.
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (ConversionList): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_patch(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          integer(),
          String.t(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t()} | {:error, Tesla.Env.t()}
  def doubleclicksearch_conversion_patch(
        connection,
        advertiser_id,
        agency_id,
        end_date,
        engine_account_id,
        row_count,
        start_date,
        start_row,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:patch)
      |> Request.url("/conversion")
      |> Request.add_param(:query, :advertiserId, advertiser_id)
      |> Request.add_param(:query, :agencyId, agency_id)
      |> Request.add_param(:query, :endDate, end_date)
      |> Request.add_param(:query, :engineAccountId, engine_account_id)
      |> Request.add_param(:query, :rowCount, row_count)
      |> Request.add_param(:query, :startDate, start_date)
      |> Request.add_param(:query, :startRow, start_row)
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}])
  end

  @doc """
  Updates a batch of conversions in DoubleClick Search.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (ConversionList): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_update(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.DoubleClickSearch.V2.Model.ConversionList.t()} | {:error, Tesla.Env.t()}
  def doubleclicksearch_conversion_update(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:put)
      |> Request.url("/conversion")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.DoubleClickSearch.V2.Model.ConversionList{}])
  end

  @doc """
  Updates the availabilities of a batch of floodlight activities in DoubleClick Search.

  ## Parameters

  - connection (GoogleApi.DoubleClickSearch.V2.Connection): Connection to server
  - optional_params (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :empty (UpdateAvailabilityRequest): 

  ## Returns

  {:ok, %GoogleApi.DoubleClickSearch.V2.Model.UpdateAvailabilityResponse{}} on success
  {:error, info} on failure
  """
  @spec doubleclicksearch_conversion_update_availability(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.DoubleClickSearch.V2.Model.UpdateAvailabilityResponse.t()}
          | {:error, Tesla.Env.t()}
  def doubleclicksearch_conversion_update_availability(
        connection,
        optional_params \\ [],
        opts \\ []
      ) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :empty => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/conversion/updateAvailability")
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++ [struct: %GoogleApi.DoubleClickSearch.V2.Model.UpdateAvailabilityResponse{}]
    )
  end
end
